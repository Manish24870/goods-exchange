{"version":3,"sources":["utils/icon/icon.svg","utils/materialUI/theme.js","components/auth/PrivateRoute.js","utils/axios/axiosInstance.js","utils/auth/setAuthToken.js","utils/toast/createToast.js","actions/types.js","actions/errorActions.js","actions/authActions.js","components/auth/Register.js","components/auth/Login.js","components/navigation/Navbar.js","actions/productActions.js","components/newProduct/NewProductForm.js","components/newProduct/NewProduct.js","components/products/ProductItem.js","components/products/ProductList.js","components/products/ProductSearch.js","components/loading/Loading.js","components/products/Products.js","components/product/productImages/useWindowDimensions.js","components/product/productImages/ProductImages.js","components/product/productContent/exchangerDetails/ExchangerDetailsItem.js","components/product/productContent/exchangerDetails/ExchangerDetails.js","components/product/productContent/ProductDescription.js","components/product/productContent/productActions/productExchange/ProductExchangeItem.js","actions/exchangeActions.js","components/product/productContent/productActions/productExchange/ProductExchange.js","components/product/productContent/productActions/ProductActions.js","components/product/productContent/productDetailsList/ProductDetailsList.js","components/product/productContent/ProductInfo.js","components/product/productContent/ProductContent.js","components/product/productDiscussion/ProductQuestion.js","components/product/productDiscussion/ProductDiscussionForm.js","components/product/productDiscussion/ProductAnswerForm.js","components/product/productDiscussion/ProductDiscussion.js","components/product/Product.js","components/profile/ProfileInfo.js","components/profile/myProducts/MyProductItem.js","components/profile/myProducts/MyProducts.js","components/profile/ReceivedReviews.js","components/profile/Profile.js","components/profile/editProfile/EditProfileForm.js","components/profile/editProfile/EditProfile.js","components/favorites/FavoriteItem.js","components/favorites/Favorites.js","components/writeReview/WriteReview.js","components/initiates/InitiateItem.js","components/initiates/Initiates.js","components/offers/OfferItem.js","components/offers/OfferList.js","components/offers/Offers.js","components/admin/UserList.js","components/admin/ProductList.js","components/admin/Sidebar.js","actions/adminActions.js","components/admin/Admin.js","reducers/authReducer.js","reducers/productReducer.js","reducers/errorReducer.js","reducers/exchangeReducer.js","reducers/adminReducer.js","reducers/index.js","store.js","components/layout/Layout.js","App.js","index.js","utils/isEmpty.js"],"names":["_g","theme","createTheme","palette","type","primary","main","contrastText","secondary","error","success","info","typography","fontFamily","fontSize","caption","components","MuiContainer","defaultProps","maxWidth","connect","state","isAuthenticated","auth","children","to","axiosInstance","axios","create","baseURL","process","setAuthToken","token","defaults","headers","common","createToast","message","toast","dismiss","clearWaitingQueue","SET_CURRENT_USER","SET_CURRENT_USER_INFO","SET_CURRENT_USER_LOADING","SET_CURRENT_USER_INFO_LOADING","SET_ERRORS","CLEAR_ERRORS","CREATE_NEW_PRODUCT","GET_PRODUCTS","SET_PRODUCTS_LOADING","GET_PRODUCT","FAVORITE_PRODUCT","CREATE_NEW_QUESTION","CREATE_NEW_ANSWER","GET_MY_PRODUCTS","GET_MY_FAVORITES","GET_MY_INITIATES","GET_MY_OFFERS","SET_MY_PRODUCTS_LOADING","SET_MY_FAVORITES_LOADING","SET_MY_INITIATES_LOADING","SET_MY_OFFERS_LOADING","ADMIN_GET_USERS","ADMIN_GET_USERS_LOADING","ADMIN_GET_PRODUCTS","ADMIN_GET_PRODUCTS_LOADING","ADMIN_DELETE_USER","ADMIN_DELETE_PRODUCT","ADMIN_PROMOTE_USER","ADMIN_DEMOTE_USER","setErrors","payload","dispatch","errorType","data","errors","clearErrors","authenticateUser","response","navigate","user","localStorage","setItem","decoded","jwt_decode","setCurrentUser","replace","setCurrentUserLoading","registerUser","userData","a","post","props","useNavigate","useState","username","email","password","passwordConfirm","formData","setFormData","errorMessages","setErrorMessages","useEffect","isEmpty","onFormValueChange","e","target","name","value","Box","mt","Container","textAlign","Typography","component","variant","sx","fontWeight","autoComplete","noValidate","onSubmit","preventDefault","Grid","container","justifyContent","spacing","item","xs","TextField","fullWidth","label","onChange","helperText","Button","color","size","mr","opacity","Link","underline","loginUser","errorData","usernameOrEmail","FormControlLabel","control","Checkbox","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","titleId","viewBox","xmlns","ref","id","d","ForwardRef","userInfo","logoutUser","removeItem","myAccountMenu","setMyAccountMenu","open","Boolean","handleMyAccountClose","AppBar","position","Toolbar","disableGutters","flexGrow","SvgIcon","LogoIcon","Fragment","textTransform","marginRight","sm","marginLeft","Tooltip","IconButton","onClick","event","currentTarget","Avatar","alt","src","profileImage","bgcolor","height","width","Menu","anchorEl","onClose","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","AccountCircleOutlined","FavoriteBorder","role","SettingsOutlined","ExitToAppOutlined","favoriteProduct","favoriteDetails","favorites","setProductsLoading","createNewProduct","productData","header","newProduct","productName","productKind","condition","usedFor","usedForType","warranty","expiresIn","expiresInType","additionals","exchangeWith","description","productImages","files","newFormData","FormData","forEach","append","encType","display","flexDirection","marginBottom","FormControl","InputLabel","Select","labelId","defaultValue","multiline","rows","accept","style","multiple","htmlFor","marginTop","NewProduct","md","userFavorites","Card","CardMedia","image","product","images","url","CardContent","alignItems","owner","ml","moment","postedAt","format","minHeight","slice","_id","currentUserInfo","favoriteData","productId","productOwnerId","some","el","ArrowForwardIos","ProductList","productList","products","map","ProductSearch","searchText","onSearchTextChange","Loading","className","values","productsLoading","getProducts","get","console","log","productContent","page","setPage","setSearchText","startingIndex","endingIndex","matchedProducts","filter","toLowerCase","includes","details","kind","el2","mb","Stack","Pagination","count","margin","getWindowDimensions","window","innerWidth","innerHeight","userId","ProductImages","viewWidth","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","useTheme","renderImages","breakpoints","ImageListItem","loading","gridTemplateColumns","lg","ExchangerDetailsItem","Icon","icon","borderRadius","textDecoration","ExchangerDetails","rep","phone","Phone","location","Email","FmdGood","reputation","BarChart","deleteProduct","delete","reportProduct","Divider","lineHeight","ProductExchangeItem","onExchangeItemSelect","border","DialogContent","createNewExchange","exchangeData","handleClose","getMyInitiates","getMyProducts","setMyProductsLoading","myProducts","setMyInitiatesLoading","myInitiates","getMyOffers","setMyOffersLoading","myOffers","setMyFavoritesLoading","myProductsLoading","exchange","productOwner","renderMyProducts","productGiven","productWanted","Dialog","DialogTitle","DialogActions","setOpen","handleClickOpenUnexchanged","handleClickOpenExchanged","el1","initiator","initiatorId","CompareArrowsOutlined","Favorite","FavoriteBorderOutlined","ProductDetailsList","listItem","text","x","y","diff","duration","as","Math","floor","formatExpiry","charAt","toUpperCase","ProductInfo","renderActions","renderDetails","detail","ProductContent","canAnswer","handleClickOpen","question","ques","ans","createNewQuestion","questionData","questions","createNewAnswer","questionId","answerData","answer","autoFocus","ProductDiscussion","renderQuestions","setQuestionId","getProduct","useParams","ProfileInfo","LocationOn","MyProductItem","MyProducts","renderProducts","ReceivedReviews","renderReviews","reviews","review","reviewText","Rating","Number","reviewNumber","max","reviewedAt","userLoading","userInfoLoading","profileRender","EditProfileForm","userImage","updateUserProfile","editProfileRender","FavoriteItem","myFavoritesLoading","myFavorites","getMyFavorites","renderFavorites","favorite","createAReview","reviewData","onFormDataChange","exchangeId","reviewedFor","ownerId","initiatorData","loggedInUserId","Paper","initiatorProduct","loggedInUserData","initiatedAt","acceptedAt","offerStatus","initiateId","myInitiatesLoading","renderInitiates","initiate","rejectOffer","acceptOffer","onOfferAccept","initiatorItemId","onOfferReject","givenProduct","wantedProduct","ownerData","OfferList","offer","ownerInfo","initiateInitiatedAt","myOffersLoading","renderOffers","UserList","dataColumns","field","headerName","getActions","params","Delete","adminDeleteUser","getValue","ArrowDownward","ArrowUpward","adminDemoteUser","adminPromoteUser","dataRows","adminUsers","push","admin","columns","autoHeight","density","pageSize","rowsPerPageOptions","adminDeleteProduct","adminProducts","reportedCount","Sidebar","List","ListItemButton","selected","selectedIndex","handleListItemClick","ListItemIcon","ManageAccounts","ListItemText","InboxSharp","setAdminUsersLoading","setAdminProductsLoading","adminUsersLoading","adminProductsLoading","adminGetAllUsers","users","patch","promotedUser","demotedUser","adminGetAllProducts","renderList","React","setSelectedIndex","index","initialState","authReducer","action","productReducer","_","mapKeys","errorReducer","exchangeReducer","adminReducer","omit","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","jwt","Layout","path","element","App","autoClose","closeOnClick","limit","pauseOnFocusLoss","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById","module","exports","undefined","trim"],"mappings":"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","file":"static/js/main.9acacea4.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"Layer 21\",\n    id: \"Layer_21\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.9,6.1A14,14,0,0,0,6.1,25.9,14,14,0,0,0,25.9,6.1ZM24.58,24.58A12.14,12.14,0,1,1,28.13,16,12.06,12.06,0,0,1,24.58,24.58Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.37,14a.93.93,0,0,0,1.86,0V7.42a.86.86,0,0,0-.07-.36h0A.73.73,0,0,0,20,6.78h0l0,0h0a.73.73,0,0,0-.28-.19.86.86,0,0,0-.36-.07H12.7a.93.93,0,0,0,0,1.86h4.35L6.76,18.64a.94.94,0,0,0,0,1.32.94.94,0,0,0,1.32,0L18.37,9.67Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.24,12a.94.94,0,0,0-1.32,0L13.63,22.33V18a.93.93,0,1,0-1.86,0v6.6a.93.93,0,0,0,.26.65h0l0,0h0a.93.93,0,0,0,.65.26h6.6a.93.93,0,0,0,0-1.86H15L25.24,13.36A.94.94,0,0,0,25.24,12Z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcon);\nexport default __webpack_public_path__ + \"static/media/icon.a0619d27.svg\";\nexport { ForwardRef as ReactComponent };","import { createTheme } from \"@mui/material\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        // primary: {\r\n        //     main: \"#6325A9\",\r\n        //     contrastText: \"#fff\",\r\n        // },\r\n        // primary: {\r\n        // main: \"#4FB7D7\",\r\n        //     contrastText: \"#fff\",\r\n        // },\r\n        // primary: {\r\n        //     main: \"#6325A9\",\r\n        //     contrastText: \"#fff\",\r\n        // },\r\n        // primary: {\r\n        //     main: \"#105157\",\r\n        //     contrastText: \"#fff\",\r\n        // },\r\n        primary: {\r\n            main: \"#109382\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        // primary: {\r\n        //     main: \"#0B36FC\",\r\n        //     contrastText: \"#fff\",\r\n        // },\r\n        // primary: {\r\n        //     main: \"#4D58B2\",\r\n        //     contrastText: \"#fff\",\r\n        // },\r\n        secondary: {\r\n            main: \"#FF5F5F\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        error: {\r\n            main: \"#FF5F5F\",\r\n        },\r\n        success: {\r\n            main: \"#E3A6F6\",\r\n        },\r\n        info: {\r\n            main: \"#6325A9\",\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: \"Sora\",\r\n        fontSize: 14,\r\n        caption: {\r\n            fontSize: \"0.83rem\",\r\n        },\r\n    },\r\n    components: {\r\n        MuiContainer: {\r\n            defaultProps: {\r\n                maxWidth: \"lg\",\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ isAuthenticated, children }) => {\r\n    return isAuthenticated ? children : <Navigate to=\"/auth/login\" />;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_SERVER_URL,\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axiosInstance from \"../axios/axiosInstance\";\r\n\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        axiosInstance.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n    } else {\r\n        delete axiosInstance.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { toast } from \"react-toastify\";\r\n\r\nconst createToast = (message, type = \"default\") => {\r\n    toast.dismiss();\r\n    toast.clearWaitingQueue();\r\n\r\n    // Wrong login credentials error\r\n    if (type === \"invalid-login-error\") {\r\n        toast.error(message);\r\n    } else if (type === \"success\") {\r\n        toast.success(message);\r\n    } else if (type === \"error\") {\r\n        toast.error(message);\r\n    } else if (type === \"default\") {\r\n        toast(message);\r\n    }\r\n};\r\n\r\nexport default createToast;\r\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const SET_CURRENT_USER_INFO = \"SET_CURRENT_USER_INFO\";\r\nexport const SET_CURRENT_USER_LOADING = \"SET_CURRENT_USER_LOADING\";\r\nexport const SET_CURRENT_USER_INFO_LOADING = \"SET_CURRENT_USER_INFO_LOADING\";\r\n\r\nexport const SET_ERRORS = \"SET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const CREATE_NEW_PRODUCT = \"CREATE_NEW_PRODUCT\";\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const SET_PRODUCTS_LOADING = \"GET_PRODUCTS_LOADING\";\r\nexport const GET_PRODUCT = \"GET_PRODUCT\";\r\nexport const FAVORITE_PRODUCT = \"FAVORITE_PRODUCT\";\r\n\r\nexport const CREATE_NEW_QUESTION = \"CREATE_NEW_QUESTION\";\r\nexport const CREATE_NEW_ANSWER = \"CREATE_NEW_ANSWER\";\r\n\r\nexport const GET_MY_PRODUCTS = \"GET_MY_PRODUCTS\";\r\nexport const GET_MY_FAVORITES = \"GET_MY_FAVORITES\";\r\nexport const GET_MY_INITIATES = \"GET_MY_INITIATES\";\r\nexport const GET_MY_OFFERS = \"GET_MY_OFFERS\";\r\nexport const SET_MY_PRODUCTS_LOADING = \"SET_MY_PORDUCTS_LOADING\";\r\nexport const SET_MY_FAVORITES_LOADING = \"SET_MY_FAVORITES_LOADING\";\r\nexport const SET_MY_INITIATES_LOADING = \"SET_MY_INITIATES_LOADING\";\r\nexport const SET_MY_OFFERS_LOADING = \"SET_MY_OFFERS_LOADING\";\r\n\r\nexport const ADMIN_GET_USERS = \"ADMIN_GET_USERS\";\r\nexport const ADMIN_GET_USERS_LOADING = \"ADMIN_GET_USERS_LOADING\";\r\nexport const ADMIN_GET_PRODUCTS = \"ADMIN_GET_PRODUCTS\";\r\nexport const ADMIN_GET_PRODUCTS_LOADING = \"ADMIN_GET_PRODUCTS_LOADING\";\r\nexport const ADMIN_DELETE_USER = \"ADMIN_DELETE_USER\";\r\nexport const ADMIN_DELETE_PRODUCT = \"ADMIN_DELETE_PRODUCT\";\r\nexport const ADMIN_PROMOTE_USER = \"ADMIN_PROMOTE_USER\";\r\nexport const ADMIN_DEMOTE_USER = \"ADMIN_DEMOTE_USER\";\r\n","import createToast from \"../utils/toast/createToast\";\r\nimport { SET_ERRORS, CLEAR_ERRORS } from \"./types\";\r\n\r\n// Functions to dispatch error actions\r\n// Set the errors\r\nexport const setErrors = (payload) => (dispatch) => {\r\n  // Check if the user is not logged in\r\n  if (\r\n    payload.errorType === \"unauthorized-error\" ||\r\n    payload.errorType === \"already-exchanged-error\" ||\r\n    payload.errorType === \"already-reviewed-error\" ||\r\n    payload.errorType === \"already-reported-error\"\r\n  ) {\r\n    createToast(payload.data.errors.message, \"error\");\r\n  }\r\n\r\n  dispatch({\r\n    type: SET_ERRORS,\r\n    payload,\r\n  });\r\n};\r\n\r\n// Clear errors while component unmounts\r\nexport const clearErrors = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n","import jwt_decode from \"jwt-decode\";\r\n\r\nimport axiosInstance from \"../utils/axios/axiosInstance\";\r\nimport setAuthToken from \"../utils/auth/setAuthToken\";\r\nimport createToast from \"../utils/toast/createToast\";\r\nimport { setErrors } from \"./errorActions\";\r\nimport {\r\n  SET_CURRENT_USER,\r\n  SET_CURRENT_USER_INFO,\r\n  SET_CURRENT_USER_LOADING,\r\n  SET_CURRENT_USER_INFO_LOADING,\r\n} from \"./types\";\r\n\r\n// Action for registering a user\r\nexport const registerUser = (userData, navigate) => async (dispatch) => {\r\n  dispatch(setCurrentUserLoading());\r\n  try {\r\n    const response = await axiosInstance.post(\"/api/auth/register\", userData);\r\n    authenticateUser(response, dispatch, navigate);\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Action for logging in a user\r\nexport const loginUser = (userData, navigate) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.post(\"/api/auth/login\", userData);\r\n    authenticateUser(response, dispatch, navigate);\r\n  } catch (err) {\r\n    // Show toast message\r\n    const errorData = err.response.data.data;\r\n    createToast(errorData.errors.message, err.response.data.errorType);\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Action for logging user out\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwt\");\r\n  setAuthToken(false);\r\n  dispatch(setCurrentUser({}));\r\n  dispatch({\r\n    type: SET_CURRENT_USER_INFO,\r\n    payload: {},\r\n  });\r\n  createToast(\"Logged out successfully\", \"success\");\r\n};\r\n\r\n// Function to set logged in users state\r\nconst authenticateUser = (response, dispatch, navigate) => {\r\n  // Save token in localstorage\r\n  const token = response.data.data.token;\r\n  dispatch({\r\n    type: SET_CURRENT_USER_INFO,\r\n    payload: response.data.data.user,\r\n  });\r\n  localStorage.setItem(\"jwt\", token);\r\n\r\n  // Set the token in axios header\r\n  setAuthToken(token);\r\n\r\n  // Set the decoded data in redux store\r\n  const decoded = jwt_decode(token);\r\n  dispatch(setCurrentUser(decoded));\r\n  createToast(\"Login Successful\", \"success\");\r\n  navigate(\"/products\", { replace: true });\r\n};\r\n\r\n// Disaptch function to set user data in store\r\nexport const setCurrentUser = (decoded) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded,\r\n  };\r\n};\r\n\r\nexport const setCurrentUserLoading = () => {\r\n  return {\r\n    type: SET_CURRENT_USER_LOADING,\r\n  };\r\n};\r\n\r\nconst setCurrentUserInfoLoading = () => {\r\n  return {\r\n    type: SET_CURRENT_USER_INFO_LOADING,\r\n  };\r\n};\r\n\r\n// Function to populate user info on app load\r\nexport const populateUserInfo = (userId) => async (dispatch) => {\r\n  dispatch(setCurrentUserInfoLoading());\r\n  try {\r\n    const response = await axiosInstance.get(`/api/auth/get-user/${userId}`);\r\n    dispatch({\r\n      type: SET_CURRENT_USER_INFO,\r\n      payload: response.data.data.user,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Function to update the user profile\r\nexport const updateUserProfile = (userData, navigate) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.post(\r\n      \"/api/auth/update-profile\",\r\n      userData\r\n    );\r\n    dispatch({\r\n      type: SET_CURRENT_USER_INFO,\r\n      payload: response.data.data.user,\r\n    });\r\n    navigate(\"/profile\", { replace: true });\r\n    createToast(\"Profile Updated\", \"success\");\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    Link as MaterialLink,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport isEmpty from \"../../utils/isEmpty\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\n\r\n// REGISTER COMPONENT\r\nconst Register = (props) => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n    });\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n\r\n    // Hook for getting error message\r\n    useEffect(() => {\r\n        setErrorMessages({});\r\n        if (!isEmpty(props.error)) {\r\n            setErrorMessages(props.error.data.errors);\r\n        }\r\n    }, [props.error]);\r\n\r\n    // Hook for removing errors when component unmounts\r\n    useEffect(() => {\r\n        return () => {\r\n            props.clearErrors();\r\n        };\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onFormValueChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.registerUser(formData, navigate);\r\n    };\r\n\r\n    return (\r\n        <Box mt={11}>\r\n            <Container maxWidth=\"xs\">\r\n                <Box textAlign=\"center\">\r\n                    <Typography component=\"h1\" variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n                        Register\r\n                    </Typography>\r\n                </Box>\r\n                <Box component=\"form\" autoComplete=\"off\" noValidate mt={4} onSubmit={onFormSubmit}>\r\n                    <Grid container justifyContent=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                name=\"username\"\r\n                                label=\"Username\"\r\n                                value={formData.username}\r\n                                onChange={onFormValueChange}\r\n                                error={errorMessages.username ? true : false}\r\n                                helperText={errorMessages.username ? errorMessages.username : null}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                value={formData.email}\r\n                                onChange={onFormValueChange}\r\n                                error={errorMessages.email ? true : false}\r\n                                helperText={errorMessages.email ? errorMessages.email : null}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                value={formData.password}\r\n                                onChange={onFormValueChange}\r\n                                error={errorMessages.password ? true : false}\r\n                                helperText={errorMessages.password ? errorMessages.password : null}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                name=\"passwordConfirm\"\r\n                                label=\"Confirm Password\"\r\n                                value={formData.passwordConfirm}\r\n                                onChange={onFormValueChange}\r\n                                error={errorMessages.passwordConfirm ? true : false}\r\n                                helperText={\r\n                                    errorMessages.passwordConfirm\r\n                                        ? errorMessages.passwordConfirm\r\n                                        : null\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                sx={{ mt: 2 }}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sx={{ textAlign: \"center\" }}>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"span\"\r\n                                sx={{ mr: 1, opacity: 0.7 }}\r\n                            >\r\n                                Already have an account?\r\n                            </Typography>\r\n                            <MaterialLink component={Link} to=\"/auth/login\" underline=\"hover\">\r\n                                Login\r\n                            </MaterialLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.error,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { registerUser, clearErrors })(Register);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    Link as MaterialLink,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport isEmpty from \"../../utils/isEmpty\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\n\r\n// LOGIN COMPONENT\r\nconst Login = (props) => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        usernameOrEmail: \"\",\r\n        password: \"\",\r\n    });\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n\r\n    // Hook for getting error message\r\n    useEffect(() => {\r\n        setErrorMessages({});\r\n        if (!isEmpty(props.error)) {\r\n            setErrorMessages(props.error.data.errors);\r\n        }\r\n    }, [props.error]);\r\n\r\n    // Hook for removing errors when component unmounts\r\n    useEffect(() => {\r\n        return () => {\r\n            props.clearErrors();\r\n        };\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onFormValueChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.loginUser(formData, navigate);\r\n    };\r\n\r\n    return (\r\n        <Box mt={11}>\r\n            <Container maxWidth=\"xs\">\r\n                <Box textAlign=\"center\">\r\n                    <Typography component=\"h1\" variant=\"h4\" sx={{ fontWeight: 500 }}>\r\n                        Login\r\n                    </Typography>\r\n                </Box>\r\n                <Box component=\"form\" autoComplete=\"off\" noValidate mt={4} onSubmit={onFormSubmit}>\r\n                    <Grid container justifyContent=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                name=\"usernameOrEmail\"\r\n                                label=\"Username or Email\"\r\n                                value={formData.usernameOrEmail}\r\n                                onChange={onFormValueChange}\r\n                                error={errorMessages.usernameOrEmail ? true : false}\r\n                                helperText={\r\n                                    errorMessages.usernameOrEmail\r\n                                        ? errorMessages.usernameOrEmail\r\n                                        : null\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                value={formData.password}\r\n                                onChange={onFormValueChange}\r\n                                error={errorMessages.password ? true : false}\r\n                                helperText={errorMessages.password ? errorMessages.password : null}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel control={<Checkbox />} label=\"Remember me\" />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                sx={{ mt: 0 }}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sx={{ textAlign: \"center\" }}>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"span\"\r\n                                sx={{ mr: 1, opacity: 0.7 }}\r\n                            >\r\n                                Don't have an account?\r\n                            </Typography>\r\n                            <MaterialLink component={Link} to=\"/auth/register\" underline=\"hover\">\r\n                                Register\r\n                            </MaterialLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.error,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser, clearErrors })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  Toolbar,\r\n  Container,\r\n  Box,\r\n  SvgIcon,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  IconButton,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport {\r\n  AccountCircleOutlined,\r\n  SettingsOutlined,\r\n  ExitToAppOutlined,\r\n  FavoriteBorder,\r\n} from \"@mui/icons-material\";\r\n\r\nimport { ReactComponent as LogoIcon } from \"../../utils/icon/icon.svg\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nconst Navbar = (props) => {\r\n  const [myAccountMenu, setMyAccountMenu] = useState(null);\r\n  const open = Boolean(myAccountMenu);\r\n\r\n  const handleMyAccountClick = (event) => {\r\n    setMyAccountMenu(event.currentTarget);\r\n  };\r\n\r\n  const handleMyAccountClose = () => {\r\n    setMyAccountMenu(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Container>\r\n        <Toolbar disableGutters>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Button color=\"inherit\" component={Link} to=\"/products\">\r\n              <SvgIcon\r\n                component={LogoIcon}\r\n                viewBox=\"0 0 32 32\"\r\n                fontSize=\"large\"\r\n              />\r\n            </Button>\r\n            <React.Fragment>\r\n              <Button\r\n                component={Link}\r\n                to=\"/products\"\r\n                sx={{\r\n                  textTransform: \"none\",\r\n                  marginRight: {\r\n                    xs: 0,\r\n                    sm: \"1.4em\",\r\n                  },\r\n                  marginLeft: {\r\n                    xs: 0,\r\n                    sm: 2,\r\n                  },\r\n                }}\r\n                color=\"inherit\"\r\n              >\r\n                Products\r\n              </Button>\r\n              {/* Show buttons according to users authentication status */}\r\n              {props.auth.isAuthenticated ? (\r\n                <React.Fragment>\r\n                  <Button\r\n                    component={Link}\r\n                    to=\"/products/new\"\r\n                    sx={{\r\n                      textTransform: \"none\",\r\n                      marginRight: {\r\n                        xs: 0,\r\n                        sm: \"1.4em\",\r\n                      },\r\n                    }}\r\n                    color=\"inherit\"\r\n                  >\r\n                    Add Product\r\n                  </Button>\r\n                  <Button\r\n                    component={Link}\r\n                    to=\"/initiates\"\r\n                    sx={{\r\n                      textTransform: \"none\",\r\n                      marginRight: {\r\n                        xs: 0,\r\n                        sm: \"1.4em\",\r\n                      },\r\n                    }}\r\n                    color=\"inherit\"\r\n                  >\r\n                    Initiates\r\n                  </Button>\r\n                  <Button\r\n                    component={Link}\r\n                    to=\"/offers\"\r\n                    sx={{\r\n                      textTransform: \"none\",\r\n                      marginRight: {\r\n                        xs: 0,\r\n                        sm: \"1.4em\",\r\n                      },\r\n                    }}\r\n                    color=\"inherit\"\r\n                  >\r\n                    Offers\r\n                  </Button>\r\n                </React.Fragment>\r\n              ) : null}\r\n            </React.Fragment>\r\n          </Box>\r\n\r\n          <Box>\r\n            {!props.auth.isAuthenticated ? (\r\n              <React.Fragment>\r\n                <Button\r\n                  component={Link}\r\n                  to=\"/auth/register\"\r\n                  sx={{\r\n                    textTransform: \"none\",\r\n                  }}\r\n                  color=\"inherit\"\r\n                >\r\n                  Register\r\n                </Button>\r\n                <Button\r\n                  component={Link}\r\n                  to=\"/auth/login\"\r\n                  sx={{\r\n                    textTransform: \"none\",\r\n                    marginLeft: {\r\n                      xs: 0,\r\n                      sm: \"2em\",\r\n                    },\r\n                  }}\r\n                  color=\"inherit\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </React.Fragment>\r\n            ) : (\r\n              <Tooltip title=\"My account\">\r\n                <IconButton onClick={handleMyAccountClick} size=\"small\">\r\n                  <Avatar\r\n                    alt={props.userInfo.username}\r\n                    src={\r\n                      process.env.REACT_APP_BASE_IMAGE_URL +\r\n                      props.userInfo.profileImage\r\n                    }\r\n                    sx={{ bgcolor: \"#FF5F5F\", height: \"35px\", width: \"35px\" }}\r\n                  ></Avatar>\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n          </Box>\r\n\r\n          {props.auth.isAuthenticated ? (\r\n            <Menu\r\n              anchorEl={myAccountMenu}\r\n              open={open}\r\n              onClick={handleMyAccountClose}\r\n              onClose={handleMyAccountClose}\r\n              transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n              anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n            >\r\n              <MenuItem component={Link} to=\"/profile\">\r\n                <AccountCircleOutlined fontSize=\"small\" sx={{ mr: 1 }} />\r\n                My Profile\r\n              </MenuItem>\r\n              <MenuItem component={Link} to=\"/favorites\">\r\n                <FavoriteBorder fontSize=\"small\" sx={{ mr: 1 }} />\r\n                My Favorites\r\n              </MenuItem>\r\n              {props.auth.userInfo.role === \"admin\" ? (\r\n                <MenuItem component={Link} to=\"/admin\">\r\n                  <SettingsOutlined fontSize=\"small\" sx={{ mr: 1 }} />\r\n                  Admin Page\r\n                </MenuItem>\r\n              ) : null}\r\n\r\n              <MenuItem onClick={props.logoutUser}>\r\n                <ExitToAppOutlined fontSize=\"small\" sx={{ mr: 1 }} />\r\n                Logout\r\n              </MenuItem>\r\n            </Menu>\r\n          ) : null}\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    userInfo: state.auth.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Navbar);\r\n","import axiosInstance from \"../utils/axios/axiosInstance\";\r\nimport { clearErrors, setErrors } from \"./errorActions\";\r\nimport createToast from \"../utils/toast/createToast\";\r\nimport {\r\n  CREATE_NEW_PRODUCT,\r\n  GET_PRODUCTS,\r\n  GET_PRODUCT,\r\n  CREATE_NEW_QUESTION,\r\n  CREATE_NEW_ANSWER,\r\n  FAVORITE_PRODUCT,\r\n  SET_PRODUCTS_LOADING,\r\n} from \"./types\";\r\n\r\n// Function to create a new product\r\nexport const createNewProduct = (productData, navigate) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.post(\r\n      \"/api/products/create\",\r\n      productData,\r\n      {\r\n        header: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    dispatch({\r\n      type: CREATE_NEW_PRODUCT,\r\n      payload: response.data.data.newProduct,\r\n    });\r\n    createToast(\"New product created\", \"success\");\r\n    navigate(\"/products\", { replace: true });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function to get all products from DB\r\nexport const getProducts = () => async (dispatch) => {\r\n  dispatch(setProductsLoading());\r\n  try {\r\n    const response = await axiosInstance.get(\"/api/products\");\r\n    dispatch({\r\n      type: GET_PRODUCTS,\r\n      payload: response.data.data.products,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Function to get a single product\r\nexport const getProduct = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.get(`/api/products/${id}`);\r\n    dispatch({\r\n      type: GET_PRODUCT,\r\n      payload: response.data.data.product,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n  }\r\n};\r\n\r\n// Function to delete a product\r\nexport const deleteProduct = (productId, navigate) => async (dispatch) => {\r\n  try {\r\n    await axiosInstance.delete(`/api/products/${productId}`);\r\n    createToast(\"Product deleted\", \"success\");\r\n    navigate(\"/products\", { replace: true });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function  to report a product\r\nexport const reportProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.post(\r\n      `/api/products/report/${productId}`\r\n    );\r\n    dispatch({\r\n      type: GET_PRODUCT,\r\n      payload: response.data.data.product,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function to post a question\r\nexport const createNewQuestion =\r\n  (id, questionData, setFormData) => async (dispatch) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `/api/products/${id}/question`,\r\n        questionData\r\n      );\r\n      dispatch(clearErrors());\r\n      dispatch({\r\n        type: CREATE_NEW_QUESTION,\r\n        payload: response.data.data.product.questions,\r\n      });\r\n      createToast(\"Question added\", \"success\");\r\n      setFormData({ question: \"\" });\r\n    } catch (err) {\r\n      dispatch(setErrors(err.response.data));\r\n    }\r\n  };\r\n\r\n// Function to answer a question\r\nexport const createNewAnswer =\r\n  (id, questionId, answerData, handleClose) => async (dispatch) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `/api/products/${id}/${questionId}/answer`,\r\n        answerData\r\n      );\r\n      dispatch(clearErrors());\r\n      dispatch({\r\n        type: CREATE_NEW_ANSWER,\r\n        payload: response.data.data.product.questions,\r\n      });\r\n      // Function to close the dialog box\r\n      handleClose();\r\n    } catch (err) {\r\n      dispatch(setErrors(err.response.data));\r\n    }\r\n  };\r\n\r\n// Function to favorite a product\r\nexport const favoriteProduct = (favoriteDetails) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.post(\r\n      \"/api/products/favorite\",\r\n      favoriteDetails\r\n    );\r\n    createToast(response.data.data.message, \"success\");\r\n    dispatch({\r\n      type: FAVORITE_PRODUCT,\r\n      payload: response.data.data.user.favorites,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function to set loading while fetching products\r\nconst setProductsLoading = () => {\r\n  return {\r\n    type: SET_PRODUCTS_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nimport isEmpty from \"../../utils/isEmpty\";\r\nimport { createNewProduct } from \"../../actions/productActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\n\r\nconst NewProductForm = (props) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    productName: \"\",\r\n    productKind: \"\",\r\n    condition: \"\",\r\n    usedFor: \"\",\r\n    usedForType: \"Months\",\r\n    warranty: \"\",\r\n    expiresIn: \"\",\r\n    expiresInType: \"Days\",\r\n    additionals: \"\",\r\n    exchangeWith: \"\",\r\n    description: \"\",\r\n    productImages: [],\r\n  });\r\n\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  //Hook for getting error message\r\n  useEffect(() => {\r\n    setErrorMessages({});\r\n    if (!isEmpty(props.error)) {\r\n      setErrorMessages(props.error.data.errors);\r\n    }\r\n  }, [props.error]);\r\n\r\n  //Hook for removing errors when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearErrors();\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onFormValueChange = (e) => {\r\n    if (e.target.name === \"productImages\") {\r\n      setFormData({ ...formData, [e.target.name]: e.target.files });\r\n    } else {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    let newFormData = new FormData();\r\n\r\n    Object.keys(formData).forEach((value) => {\r\n      if (value === \"productImages\") {\r\n        for (let i = 0; i < formData.productImages.length; i++) {\r\n          newFormData.append(\"productImages\", formData.productImages[i]);\r\n        }\r\n      } else {\r\n        newFormData.append([value], formData[value]);\r\n      }\r\n    });\r\n    props.createNewProduct(newFormData, navigate);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      mt={2}\r\n      component=\"form\"\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={onFormSubmit}\r\n      encType=\"multipart/form-data\"\r\n    >\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ display: \"flex\", flexDirection: \"column\" }}\r\n      >\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Product name\"\r\n            variant=\"standard\"\r\n            name=\"productName\"\r\n            value={formData.productName}\r\n            onChange={onFormValueChange}\r\n            error={errorMessages.productName ? true : false}\r\n            helperText={\r\n              errorMessages.productName ? errorMessages.productName : null\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Product kind\"\r\n            variant=\"standard\"\r\n            name=\"productKind\"\r\n            value={formData.productKind}\r\n            onChange={onFormValueChange}\r\n            error={errorMessages.productKind ? true : false}\r\n            helperText={\r\n              errorMessages.productKind ? errorMessages.productKind : null\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <Grid\r\n            container\r\n            sx={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n          >\r\n            <Grid item xs={4}>\r\n              <FormControl\r\n                sx={{ width: \"100%\", marginRight: 0 }}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel id=\"condition-select-label\">Condition</InputLabel>\r\n                <Select\r\n                  labelId=\"condition-select-label\"\r\n                  defaultValue=\"\"\r\n                  label=\"Condition\"\r\n                  name=\"condition\"\r\n                  value={formData.condition}\r\n                  onChange={onFormValueChange}\r\n                  error={errorMessages.condition ? true : false}\r\n                >\r\n                  <MenuItem value=\"Brand New\">Brand New</MenuItem>\r\n                  <MenuItem value=\"Lightly Used\">Lightly Used</MenuItem>\r\n                  <MenuItem value=\"Heavily Used\">Heavily Used</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={7}\r\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <TextField\r\n                sx={{ width: \"35%\", marginRight: 2 }}\r\n                label=\"Used For\"\r\n                variant=\"standard\"\r\n                name=\"usedFor\"\r\n                value={formData.usedFor}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.usedFor ? true : false}\r\n                helperText={\r\n                  errorMessages.usedFor ? errorMessages.usedFor : null\r\n                }\r\n              />\r\n\r\n              <FormControl sx={{ width: \"36%\" }} variant=\"standard\">\r\n                <InputLabel id=\"used-select-label\">Length</InputLabel>\r\n                <Select\r\n                  defaultValue=\"Months\"\r\n                  labelId=\"used-select-label\"\r\n                  label=\"Used For\"\r\n                  name=\"usedForType\"\r\n                  value={formData.usedForType}\r\n                  onChange={onFormValueChange}\r\n                >\r\n                  <MenuItem value=\"Months\">Months</MenuItem>\r\n                  <MenuItem value=\"Years\">Years</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <Grid\r\n            container\r\n            sx={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n          >\r\n            <Grid item xs={4}>\r\n              <FormControl\r\n                sx={{ width: \"100%\", marginRight: 8 }}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel id=\"warranty-select-label\">Warranty</InputLabel>\r\n                <Select\r\n                  labelId=\"warranty-select-label\"\r\n                  defaultValue=\"\"\r\n                  label=\"Warranty\"\r\n                  name=\"warranty\"\r\n                  value={formData.warranty}\r\n                  onChange={onFormValueChange}\r\n                  error={errorMessages.warranty ? true : false}\r\n                >\r\n                  <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                  <MenuItem value=\"No\">No</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={7}\r\n              sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <TextField\r\n                sx={{ width: \"35%\", marginRight: 2 }}\r\n                label=\"Expires In\"\r\n                variant=\"standard\"\r\n                name=\"expiresIn\"\r\n                value={formData.expiresIn}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.expiresIn ? true : false}\r\n                helperText={\r\n                  errorMessages.expiresIn ? errorMessages.expiresIn : null\r\n                }\r\n              />\r\n\r\n              <FormControl sx={{ width: \"36%\" }} variant=\"standard\">\r\n                <InputLabel id=\"expires-select-label\">Length</InputLabel>\r\n                <Select\r\n                  defaultValue=\"Months\"\r\n                  labelId=\"expires-select-label\"\r\n                  label=\"Expires In\"\r\n                  name=\"expiresInType\"\r\n                  value={formData.expiresInType}\r\n                  onChange={onFormValueChange}\r\n                >\r\n                  <MenuItem value=\"Days\">Days</MenuItem>\r\n                  <MenuItem value=\"Months\">Months</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Additionals\"\r\n            variant=\"standard\"\r\n            name=\"additionals\"\r\n            value={formData.additionals}\r\n            onChange={onFormValueChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Exchange With\"\r\n            variant=\"standard\"\r\n            name=\"exchangeWith\"\r\n            value={formData.exchangeWith}\r\n            onChange={onFormValueChange}\r\n            error={errorMessages.exchangeWith ? true : false}\r\n            helperText={\r\n              errorMessages.exchangeWith ? errorMessages.exchangeWith : null\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <TextField\r\n            multiline\r\n            fullWidth\r\n            rows={3}\r\n            label=\"Description\"\r\n            variant=\"standard\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={onFormValueChange}\r\n            error={errorMessages.description ? true : false}\r\n            helperText={\r\n              errorMessages.description ? errorMessages.description : null\r\n            }\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10} sx={{ marginBottom: 2 }}>\r\n          <input\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n            id=\"raised-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n            name=\"productImages\"\r\n            onChange={onFormValueChange}\r\n          />\r\n          <label htmlFor=\"raised-button-file\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              component=\"span\"\r\n              sx={{ textTransform: \"none\" }}\r\n            >\r\n              Upload minimum 3 images\r\n            </Button>\r\n          </label>\r\n          {errorMessages.productImages ? (\r\n            <p\r\n              style={{ color: \"#FF5F5F\", fontSize: \"0.8em\", marginTop: \"4px\" }}\r\n            >\r\n              {errorMessages.productImages}\r\n            </p>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item xs={10} sx={{ marginBottom: 6 }}>\r\n          <Button type=\"submit\" variant=\"contained\" size=\"large\">\r\n            Create\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createNewProduct, clearErrors })(\r\n  NewProductForm\r\n);\r\n","import React from \"react\";\r\nimport { Box, Container, Typography, Grid } from \"@mui/material\";\r\n\r\nimport NewProductForm from \"./NewProductForm\";\r\n\r\nconst NewProduct = (props) => {\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <Grid item xs={12} sm={7}>\r\n            <Typography variant=\"h5\">Create new product</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={10} md={7}>\r\n            <NewProductForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewProduct;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Button,\r\n  CardMedia,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos } from \"@mui/icons-material\";\r\n\r\nimport { favoriteProduct } from \"../../actions/productActions\";\r\n\r\nconst ProductItem = (props) => {\r\n  // When user clicks on favorite button\r\n  const onFavoriteClick = () => {\r\n    const favoriteData = {\r\n      productId: props.product._id,\r\n      productOwnerId: props.product.owner._id,\r\n    };\r\n    props.favoriteProduct(favoriteData);\r\n  };\r\n\r\n  // Check if user already favorited an item\r\n  const checkFavorites = () => {\r\n    if (\r\n      props.userFavorites &&\r\n      props.userFavorites.some((el) => el.product === props.product._id)\r\n    ) {\r\n      return \"Unfavorite\";\r\n    } else {\r\n      return \"Favorite\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Card>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          image={\r\n            process.env.REACT_APP_BASE_IMAGE_URL + props.product.images[0].url\r\n          }\r\n          alt={props.product.name}\r\n        />\r\n\r\n        <CardContent>\r\n          <Box>\r\n            <Typography variant=\"h6\">{props.product.name}</Typography>\r\n          </Box>\r\n          <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Avatar\r\n              alt={props.product.owner.name}\r\n              src={\r\n                process.env.REACT_APP_BASE_IMAGE_URL +\r\n                props.product.owner.profileImage\r\n              }\r\n              sx={{ bgcolor: \"#6325A9\" }}\r\n            />\r\n            <Box ml={2} sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <Typography variant=\"p\">\r\n                {props.product.owner.username}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"p\"\r\n                sx={{ opacity: \"90%\", fontSize: \"0.81em\" }}\r\n              >\r\n                {moment(props.product.postedAt).format(\"MMM Do YYYY, h:mm a\")}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box mt={3} sx={{ minHeight: \"60px\" }}>\r\n            <Typography variant=\"p\" sx={{ fontSize: \"0.9em\", height: \"60px\" }}>\r\n              {props.product.description.length > 101\r\n                ? props.product.description.slice(0, 102) + \" ...\"\r\n                : props.product.description}\r\n            </Typography>\r\n          </Box>\r\n          <Box mt={3} sx={{ display: \"flex\", justifyContent: \"end\" }}>\r\n            {/* If current user is the product owner, dont render favorite button */}\r\n            {props.product.owner._id !== props.currentUserInfo._id ? (\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                sx={{ textTransform: \"none\", marginRight: 2 }}\r\n                onClick={onFavoriteClick}\r\n              >\r\n                {checkFavorites()}\r\n              </Button>\r\n            ) : null}\r\n\r\n            <Button\r\n              component={Link}\r\n              to={`/products/${props.product._id}`}\r\n              size=\"large\"\r\n              variant=\"outlined\"\r\n              sx={{ textTransform: \"none\" }}\r\n            >\r\n              Details\r\n              <ArrowForwardIos sx={{ fontSize: \"1em\", marginLeft: 1 }} />\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userFavorites: state.auth.userInfo.favorites,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { favoriteProduct })(ProductItem);\r\n","import React from \"react\";\r\nimport { Box, Grid } from \"@mui/material\";\r\n\r\nimport ProductItem from \"./ProductItem\";\r\n\r\nconst ProductList = (props) => {\r\n  const productList = props.products.map((product) => {\r\n    return (\r\n      <Grid key={product._id} item xs={12} sm={6} md={4}>\r\n        <ProductItem\r\n          product={product}\r\n          currentUserInfo={props.currentUserInfo}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box mt={5}>\r\n      <Grid container spacing={5}>\r\n        {productList}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport { Box, Grid, TextField } from \"@mui/material\";\r\n\r\n// Search bar component\r\nconst ProductSearch = (props) => {\r\n  return (\r\n    <Box>\r\n      <Box component=\"form\">\r\n        <Grid\r\n          container\r\n          sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"end\" }}\r\n        >\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"standard\"\r\n              label=\"Search For Something\"\r\n              name=\"searchText\"\r\n              value={props.searchText}\r\n              onChange={props.onSearchTextChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductSearch;\r\n","import React from \"react\";\r\n\r\nimport \"./Loading.css\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"lds-ring\" style={{ marginLeft: \"40%\" }}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Container, Stack, Pagination } from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { getProducts } from \"../../actions/productActions\";\r\n\r\nconst Products = (props) => {\r\n  // For pagination\r\n  const [page, setPage] = useState(1);\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  // For search bar\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const onSearchTextChange = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  // Get all products when component mounts\r\n  useEffect(() => {\r\n    props.getProducts();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let productContent;\r\n\r\n  if (props.productsLoading) {\r\n    productContent = <Loading />;\r\n  } else if (props.products.length === 0) {\r\n    productContent = <p>No products found</p>;\r\n  } else if (searchText === \"\") {\r\n    // If there is no search text, implement pagination\r\n    const startingIndex = (page - 1) * 9;\r\n    const endingIndex = startingIndex + 9;\r\n    productContent = (\r\n      <ProductList\r\n        products={props.products.slice(startingIndex, endingIndex)}\r\n        currentUserInfo={props.currentUserInfo}\r\n      />\r\n    );\r\n  } else {\r\n    // If any text is entered in search bar\r\n    // const matchedProducts = props.products.filter((el) =>\r\n    //   el.name.toLowerCase().includes(searchText.toLowerCase())\r\n    // );\r\n    const matchedProducts = props.products.filter(\r\n      (el) =>\r\n        el.name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        el.details.kind.some((el2) =>\r\n          el2.toLowerCase().includes(searchText.toLowerCase())\r\n        )\r\n    );\r\n\r\n    productContent = (\r\n      <ProductList\r\n        products={matchedProducts}\r\n        currentUserInfo={props.currentUserInfo}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box mt={11} mb={8}>\r\n      <Container maxWidth=\"lg\">\r\n        <ProductSearch\r\n          searchText={searchText}\r\n          onSearchTextChange={onSearchTextChange}\r\n        />\r\n        {productContent}\r\n        <Stack mt={6}>\r\n          <Pagination\r\n            size=\"large\"\r\n            count={10}\r\n            color=\"info\"\r\n            page={page}\r\n            onChange={handleChange}\r\n            sx={{ margin: \"0 auto\" }}\r\n          />\r\n        </Stack>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: Object.values(state.product.products),\r\n    productsLoading: state.product.productsLoading,\r\n    currentUserInfo: state.auth.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProducts })(Products);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from \"react\";\r\nimport { Box, ImageListItem, useTheme } from \"@mui/material\";\r\nimport useWindowDimensions from \"./useWindowDimensions\";\r\n\r\nconst ProductImages = (props) => {\r\n  const { width: viewWidth } = useWindowDimensions();\r\n  const theme = useTheme();\r\n\r\n  let images;\r\n\r\n  // Check browser width to show 1,2 or 3 images\r\n  if (viewWidth >= theme.breakpoints.values.md) {\r\n    images = props.images.slice(0, 3);\r\n  } else if (viewWidth >= theme.breakpoints.values.sm) {\r\n    images = props.images.slice(0, 2);\r\n  } else {\r\n    images = props.images.slice(0, 1);\r\n  }\r\n\r\n  const renderImages = images.slice(0, 3).map((image) => {\r\n    return (\r\n      <ImageListItem key={image._id}>\r\n        <img\r\n          src={process.env.REACT_APP_BASE_IMAGE_URL + image.url}\r\n          alt={image._id}\r\n          loading=\"lazy\"\r\n        />\r\n      </ImageListItem>\r\n    );\r\n  });\r\n  return (\r\n    <Box\r\n      mt={3}\r\n      sx={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: {\r\n          xs: \"repeat(1,1fr)\",\r\n          sm: \"repeat(2,1fr)\",\r\n          md: \"repeat(3,1fr)\",\r\n          lg: \"repeat(3,1fr)\",\r\n        },\r\n      }}\r\n    >\r\n      {/* <ImageList\r\n        // cols={3}\r\n        gap={14}\r\n        sx={{\r\n          borderRadius: \"8px\",\r\n          height: 260,\r\n          overflow: \"hidden\",\r\n          cols: 3,\r\n        }}\r\n      > */}\r\n      {renderImages}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductImages;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Card, CardContent, Avatar, Box, Typography } from \"@mui/material\";\r\n\r\nconst ExchangerDetailsItem = (props) => {\r\n    const Icon = props.icon;\r\n\r\n    return (\r\n        <Grid item xs={6}>\r\n            <Card variant=\"outlined\" sx={{ borderRadius: \"6px\" }}>\r\n                <CardContent\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    <Box>\r\n                        <Avatar sx={{ height: \"30px\", width: \"30px\", bgcolor: \"#6325A9\" }}>\r\n                            <Icon fontSize=\"small\" />\r\n                        </Avatar>\r\n                    </Box>\r\n                    <Box\r\n                        ml={2}\r\n                        sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            fontSize: \"0.9em\",\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"p\" sx={{ opacity: \"90%\", marginBottom: 1 }}>\r\n                            {props.title}\r\n                        </Typography>\r\n                        <Typography variant=\"p\">\r\n                            <Link\r\n                                style={{\r\n                                    textDecoration: \"none\",\r\n                                    color: \"rgba(0, 0, 0, 0.87)\",\r\n                                }}\r\n                                to=\"#\"\r\n                                onClick={props.onClick}\r\n                            >\r\n                                {props.value}\r\n                            </Link>\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ExchangerDetailsItem;\r\n","import React from \"react\";\r\nimport { Box, Grid, Typography } from \"@mui/material\";\r\nimport { Phone, Email, FmdGood, BarChart } from \"@mui/icons-material\";\r\n\r\nimport ExchangerDetailsItem from \"./ExchangerDetailsItem\";\r\n\r\nconst ExchangerDetails = (props) => {\r\n  // When user clicks on phone\r\n  const onPhoneClick = (e) => {\r\n    e.preventDefault();\r\n    window.location = `tel:+977-${props.owner.phone}`;\r\n  };\r\n\r\n  // When user clicks on email\r\n  const onMailClick = (e) => {\r\n    e.preventDefault();\r\n    window.location = `mailto:${props.owner.email}`;\r\n  };\r\n\r\n  // Calculate reputation color and text\r\n  const calculateReputation = (rep) => {\r\n    if (rep >= 0 && rep <= 30) {\r\n      return <p style={{ color: \"#FF5F5F\" }}>{`Bad [${rep}]`}</p>;\r\n    } else if (rep >= 31 && rep <= 60) {\r\n      return <p style={{ color: \"#70beb4\" }}>{`Average [${rep}]`}</p>;\r\n    } else {\r\n      return <p style={{ color: \"#109382\" }}>{`Good [${rep}]`}</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography mt={2} variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n        Exchanger Details\r\n      </Typography>\r\n      <Grid container mt={0} spacing={1}>\r\n        <ExchangerDetailsItem\r\n          title=\"Contact\"\r\n          value={props.owner.phone}\r\n          icon={Phone}\r\n          onClick={onPhoneClick}\r\n        />\r\n        <ExchangerDetailsItem\r\n          title=\"Email\"\r\n          value={props.owner.email}\r\n          icon={Email}\r\n          onClick={onMailClick}\r\n        />\r\n        <ExchangerDetailsItem\r\n          title=\"Location\"\r\n          value={props.owner.location}\r\n          icon={FmdGood}\r\n        />\r\n        <ExchangerDetailsItem\r\n          title=\"Reputation\"\r\n          value={calculateReputation(props.owner.reputation)}\r\n          icon={BarChart}\r\n        />\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExchangerDetails;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Box, Typography, Avatar, Divider, Button } from \"@mui/material\";\r\n\r\nimport ExchangerDetails from \"./exchangerDetails/ExchangerDetails\";\r\nimport { deleteProduct, reportProduct } from \"../../../actions/productActions\";\r\n\r\nconst ProductDescription = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  // Only show delete button if current user is owner\r\n  // Else, show report button\r\n  const checkOwner = () => {\r\n    if (props.product.owner._id === props.currentUserInfo._id) {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          sx={{ textTransform: \"none\", marginLeft: 2 }}\r\n          onClick={() => props.deleteProduct(props.product._id, navigate)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"info\"\r\n          size=\"small\"\r\n          sx={{ textTransform: \"none\", marginLeft: 2 }}\r\n          onClick={() => props.reportProduct(props.product._id)}\r\n        >\r\n          Report\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ marginBottom: 2 }}>\r\n      <Typography color=\"primary\" variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n        {props.product.name}\r\n        {checkOwner()}\r\n      </Typography>\r\n      <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Avatar\r\n          alt={props.product.owner.username}\r\n          src={\r\n            process.env.REACT_APP_BASE_IMAGE_URL +\r\n            props.product.owner.profileImage\r\n          }\r\n          sx={{\r\n            marginRight: 2,\r\n            height: \"35px\",\r\n            width: \"35px\",\r\n            bgcolor: \"#6325A9\",\r\n          }}\r\n        ></Avatar>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 400 }}>\r\n          {props.product.owner.username}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"p\"\r\n          sx={{ opacity: \"70%\", fontSize: \"0.9em\", marginLeft: 2 }}\r\n        >\r\n          | &nbsp;&nbsp;&nbsp;\r\n          {moment(props.product.postedAt).format(\"MMM Do YYYY, h:mm a\")}\r\n        </Typography>\r\n      </Box>\r\n      <Divider sx={{ marginTop: 2, marginBottom: 2 }} />\r\n\r\n      <Box>\r\n        <Typography mb={1} variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n          Description\r\n        </Typography>\r\n        <Typography variant=\"p\" sx={{ lineHeight: \"1.5\" }}>\r\n          {props.product.description}\r\n        </Typography>\r\n      </Box>\r\n      {/* Show details of the owner of products */}\r\n      <ExchangerDetails owner={props.product.owner} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default connect(null, { deleteProduct, reportProduct })(\r\n  ProductDescription\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  DialogContent,\r\n  CardMedia,\r\n  Grid,\r\n} from \"@mui/material\";\r\n\r\nconst ProductExchangeItem = (props) => {\r\n  return (\r\n    <Button\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      onClick={props.onExchangeItemSelect}\r\n      sx={{\r\n        width: \"90%\",\r\n        textAlign: \"center\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: 2,\r\n      }}\r\n      style={{\r\n        border: \"2px solid\",\r\n      }}\r\n    >\r\n      <DialogContent>\r\n        <Box>\r\n          <Card>\r\n            <Grid container>\r\n              <Grid item xs={5}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  // height=\"100\"\r\n                  image={\r\n                    process.env.REACT_APP_BASE_IMAGE_URL +\r\n                    props.product.images[0].url\r\n                  }\r\n                  alt={props.product.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={7}>\r\n                <CardContent>\r\n                  <Box>\r\n                    <Typography variant=\"p\" sx={{ fontSize: \"1.1em\" }}>\r\n                      {props.product.name}\r\n                    </Typography>\r\n                  </Box>\r\n                </CardContent>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </Box>\r\n      </DialogContent>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ProductExchangeItem;\r\n","import axiosInstance from \"../utils/axios/axiosInstance\";\r\nimport {\r\n  GET_MY_PRODUCTS,\r\n  GET_MY_FAVORITES,\r\n  GET_MY_INITIATES,\r\n  GET_MY_OFFERS,\r\n  SET_MY_PRODUCTS_LOADING,\r\n  SET_MY_FAVORITES_LOADING,\r\n  SET_MY_INITIATES_LOADING,\r\n  SET_MY_OFFERS_LOADING,\r\n} from \"./types\";\r\nimport { setErrors } from \"./errorActions\";\r\nimport createToast from \"../utils/toast/createToast\";\r\n\r\n// Function to initiate or cancel an exchange\r\nexport const createNewExchange =\r\n  (exchangeData, handleClose = null) =>\r\n  async (dispatch) => {\r\n    try {\r\n      await axiosInstance.post(\"/api/exchange/create\", exchangeData);\r\n      dispatch(getMyInitiates());\r\n      // When the exchange is initiated\r\n      if (Object.keys(exchangeData).length === 3) {\r\n        createToast(\"Exchange Initiated\", \"success\");\r\n        handleClose();\r\n      } else {\r\n        createToast(\"Exchange cancelled\", \"success\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n// Function to get my products\r\nexport const getMyProducts = () => async (dispatch) => {\r\n  dispatch(setMyProductsLoading());\r\n  try {\r\n    const response = await axiosInstance.get(\"/api/exchange/my-products\");\r\n    dispatch({\r\n      type: GET_MY_PRODUCTS,\r\n      payload: response.data.data.myProducts,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Function to get my favorites\r\nexport const getMyFavorites = () => async (dispatch) => {\r\n  dispatch(setMyFavoritesLoading());\r\n  try {\r\n    const response = await axiosInstance.get(\"/api/exchange/my-favorites\");\r\n    dispatch({\r\n      type: GET_MY_FAVORITES,\r\n      payload: response.data.data.myFavorites,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// Function to get my exchange initiates\r\nexport const getMyInitiates = () => async (dispatch) => {\r\n  dispatch(setMyInitiatesLoading());\r\n  try {\r\n    const response = await axiosInstance.get(\"/api/exchange/my-initiates\");\r\n    dispatch({\r\n      type: GET_MY_INITIATES,\r\n      payload: response.data.data.myInitiates,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    // dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function to get my exchange offers\r\nexport const getMyOffers = () => async (dispatch) => {\r\n  dispatch(setMyOffersLoading());\r\n  try {\r\n    const response = await axiosInstance.get(\"/api/exchange/my-offers\");\r\n    dispatch({\r\n      type: GET_MY_OFFERS,\r\n      payload: response.data.data.myOffers,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function to reject an offer\r\nexport const rejectOffer = (exchangeData) => async (dispatch) => {\r\n  try {\r\n    await axiosInstance.post(\"/api/exchange/reject\", exchangeData);\r\n    dispatch(getMyOffers());\r\n  } catch (err) {\r\n    console.log(err.response);\r\n  }\r\n};\r\n\r\n// Function to accept an offer\r\nexport const acceptOffer = (exchangeData) => async (dispatch) => {\r\n  try {\r\n    await axiosInstance.post(\"/api/exchange/accept\", exchangeData);\r\n    dispatch(getMyOffers());\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function to create a new review\r\nexport const createAReview = (reviewData) => async (dispatch) => {\r\n  try {\r\n    await axiosInstance.post(\"/api/exchange/review\", reviewData);\r\n    createToast(\"Review added successfully\", \"success\");\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Function to dispatch action for loading state of my products\r\nconst setMyProductsLoading = () => {\r\n  return {\r\n    type: SET_MY_PRODUCTS_LOADING,\r\n  };\r\n};\r\n\r\n// Function to dispatch action for loading state of favorites\r\nconst setMyFavoritesLoading = () => {\r\n  return {\r\n    type: SET_MY_FAVORITES_LOADING,\r\n  };\r\n};\r\n\r\n// Function to dispatch action for loading state of initiates\r\nconst setMyInitiatesLoading = () => {\r\n  return {\r\n    type: SET_MY_INITIATES_LOADING,\r\n  };\r\n};\r\n\r\n// Function to dispatch action for loading state of offers\r\nconst setMyOffersLoading = () => {\r\n  return {\r\n    type: SET_MY_OFFERS_LOADING,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n} from \"@mui/material\";\r\n\r\nimport ProductExchangeItem from \"./ProductExchangeItem\";\r\nimport Loading from \"../../../../loading/Loading\";\r\nimport { createNewExchange } from \"../../../../../actions/exchangeActions\";\r\nimport isEmpty from \"../../../../../utils/isEmpty\";\r\n\r\nconst ProductExchange = (props) => {\r\n  // When user selects an item for exchange, initiate the exchange\r\n  const onExchangeItemSelect = (productGiven) => {\r\n    const exchangeData = {\r\n      productGiven,\r\n      productWanted: props.productId,\r\n      productOwner: props.productOwner,\r\n    };\r\n    props.createNewExchange(exchangeData, props.handleClose);\r\n  };\r\n  let renderMyProducts;\r\n\r\n  if (props.myProductsLoading) {\r\n    renderMyProducts = <Loading />;\r\n  } else if (isEmpty(props.myProducts)) {\r\n    renderMyProducts = <DialogContent>You do not have any items</DialogContent>;\r\n  } else {\r\n    renderMyProducts = props.myProducts.map((product) => {\r\n      return (\r\n        <ProductExchangeItem\r\n          key={product._id}\r\n          onExchangeItemSelect={() => onExchangeItemSelect(product._id)}\r\n          product={product}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      maxWidth=\"xs\"\r\n      fullWidth={true}\r\n    >\r\n      <DialogTitle>Select your product</DialogTitle>\r\n      {renderMyProducts}\r\n\r\n      <DialogActions></DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myProductsLoading: state.exchange.myProductsLoading,\r\n    myProducts: Object.values(state.exchange.myProducts),\r\n    productId: state.product.product._id,\r\n    productOwner: state.product.product.owner._id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createNewExchange })(ProductExchange);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { CompareArrowsOutlined, FavoriteBorderOutlined, Favorite } from \"@mui/icons-material\";\r\n\r\nimport ProductExchange from \"./productExchange/ProductExchange\";\r\nimport { favoriteProduct } from \"../../../../actions/productActions\";\r\nimport { getMyProducts, createNewExchange } from \"../../../../actions/exchangeActions\";\r\nimport createToast from \"../../../../utils/toast/createToast\";\r\n\r\nconst ProductActions = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    // Open dialog when initiating exchange\r\n    const handleClickOpenUnexchanged = (e) => {\r\n        e.preventDefault();\r\n        if (!props.isAuthenticated) {\r\n            createToast(\"You are not logged in\", \"error\");\r\n        } else {\r\n            setOpen(true);\r\n            props.getMyProducts();\r\n        }\r\n    };\r\n\r\n    // Dont open dialog when cancelling exchange\r\n    const handleClickOpenExchanged = (e) => {\r\n        e.preventDefault();\r\n        if (!props.isAuthenticated) {\r\n            createToast(\"You are not logged in\", \"error\");\r\n        } else {\r\n            const exchangeData = {\r\n                productWanted: props.productId,\r\n            };\r\n            props.createNewExchange(exchangeData);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onFavoriteClick = () => {\r\n        const favoriteDetails = {\r\n            productId: props.productId,\r\n            productOwnerId: props.productOwnerId,\r\n        };\r\n        props.favoriteProduct(favoriteDetails);\r\n    };\r\n\r\n    // Check if the product is already favorited\r\n    const checkFavorites = () => {\r\n        if (\r\n            props.userFavorites &&\r\n            props.userFavorites.some((el) => el.product === props.productId)\r\n        ) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Favorite sx={{ marginRight: 1 }} />\r\n                    Unfavorite\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <FavoriteBorderOutlined sx={{ marginRight: 1 }} />\r\n                    Favorite\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    // Check if the exchange is already initiated with this product\r\n    const checkExchanges = () => {\r\n        if (\r\n            props.myInitiates &&\r\n            props.myInitiates.some((el1) => {\r\n                return el1.initiator.some(\r\n                    (el2) =>\r\n                        el2.initiatorId === props.userId &&\r\n                        el1.productWanted._id === props.productId\r\n                );\r\n            })\r\n        ) {\r\n            return (\r\n                <Button\r\n                    onClick={handleClickOpenExchanged}\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    sx={{\r\n                        textTransform: \"none\",\r\n                        marginRight: 2,\r\n                    }}\r\n                >\r\n                    <CompareArrowsOutlined sx={{ marginRight: 1 }} />\r\n                    Cancel\r\n                </Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <Button\r\n                    onClick={handleClickOpenUnexchanged}\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    sx={{\r\n                        textTransform: \"none\",\r\n                        marginRight: 2,\r\n                    }}\r\n                >\r\n                    <React.Fragment>\r\n                        <CompareArrowsOutlined sx={{ marginRight: 1 }} />\r\n                        Exchange\r\n                    </React.Fragment>\r\n                </Button>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box mb={6} sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            {checkExchanges()}\r\n            <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"secondary\"\r\n                sx={{\r\n                    textTransform: \"none\",\r\n                }}\r\n                onClick={onFavoriteClick}\r\n            >\r\n                {checkFavorites()}\r\n            </Button>\r\n            <ProductExchange open={open} handleClose={handleClose} />\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productId: state.product.product._id,\r\n        productOwnerId: state.product.product.owner._id,\r\n        userId: state.auth.user.id,\r\n        userFavorites: state.auth.userInfo.favorites,\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        myInitiates: state.exchange.myInitiates,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { favoriteProduct, getMyProducts, createNewExchange })(\r\n    ProductActions\r\n);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Box, Typography, Button } from \"@mui/material\";\r\n\r\nconst ProductDetailsList = (props) => {\r\n  // Return time remaining on expiry of product\r\n  const formatExpiry = () => {\r\n    let diffText;\r\n    const x = new moment(props.value);\r\n    const y = new moment();\r\n    const diff = moment.duration(x.diff(y)).as(\"days\");\r\n    if (diff < 1) {\r\n      diffText = `${Math.floor(moment.duration(x.diff(y)).as(\"hours\"))} hours`;\r\n    } else {\r\n      diffText = `${Math.floor(diff)} days`;\r\n    }\r\n    return diffText;\r\n  };\r\n\r\n  //   Format titles like Condition, type etc\r\n  const formatTitle = (text) => {\r\n    text = text.replace(/([A-Z])/g, \" $1\");\r\n    text = text.charAt(0).toUpperCase() + text.slice(1);\r\n    return text + \"  :\";\r\n  };\r\n\r\n  let listItem;\r\n  if (typeof props.value === \"object\") {\r\n    // If items are in array, render their values\r\n    listItem = props.value.map((el) => (\r\n      <Button\r\n        key={el}\r\n        color=\"info\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        sx={{\r\n          textTransform: \"none\",\r\n          marginRight: 2,\r\n          fontSize: \"0.9em\",\r\n        }}\r\n      >\r\n        {el}\r\n      </Button>\r\n    ));\r\n  } else {\r\n    // If items are string\r\n    listItem = (\r\n      <Button\r\n        color=\"info\"\r\n        variant=\"text\"\r\n        size=\"small\"\r\n        sx={{\r\n          textTransform: \"none\",\r\n          marginRight: 2,\r\n          fontSize: \"0.9em\",\r\n        }}\r\n      >\r\n        {/* Only format expiry date, dont format others */}\r\n        {props.title === \"expiresIn\" ? formatExpiry() : props.value}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Typography variant=\"p\" sx={{ opacity: \"90%\" }}>\r\n        {formatTitle(props.title)}\r\n      </Typography>\r\n      <Typography variant=\"p\" ml={2}>\r\n        {listItem}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsList;\r\n","import React from \"react\";\r\nimport { Box, Typography, Card, CardContent } from \"@mui/material\";\r\nimport ProductActions from \"./productActions/ProductActions\";\r\nimport ProductDetailsList from \"./productDetailsList/ProductDetailsList\";\r\n\r\nconst ProductInfo = (props) => {\r\n  const renderDetails = Object.keys(props.product.details).map((detail) => {\r\n    return (\r\n      <ProductDetailsList\r\n        title={detail}\r\n        key={detail}\r\n        value={props.product.details[detail]}\r\n      />\r\n    );\r\n  });\r\n  let renderActions;\r\n  if (props.currentUserInfo._id === props.product.owner._id) {\r\n    renderActions = null;\r\n  } else {\r\n    renderActions = <ProductActions />;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {renderActions}\r\n      <Card variant=\"outlined\" sx={{ borderRadius: \"6px\" }}>\r\n        <CardContent>\r\n          <Typography mb={3} variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n            Details\r\n          </Typography>\r\n\r\n          {renderDetails}\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport ProductDescription from \"./ProductDescription\";\r\nimport ProductInfo from \"./ProductInfo\";\r\n\r\nconst ProductContent = (props) => {\r\n  return (\r\n    <Grid container mt={4} sx={{ justifyContent: \"space-between\" }}>\r\n      <Grid item xs={12} sm={12} md={6}>\r\n        <ProductDescription\r\n          product={props.product}\r\n          currentUserInfo={props.currentUserInfo}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={5}>\r\n        <ProductInfo\r\n          product={props.product}\r\n          currentUserInfo={props.currentUserInfo}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Typography, Button } from \"@mui/material\";\r\n\r\nconst ProductQuestion = (props) => {\r\n  let canAnswer;\r\n\r\n  // Only show Answer button if current user is the owner\r\n  if (props.userId === props.productOwner) {\r\n    canAnswer = (\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        sx={{ marginLeft: 2, textTransform: \"none\" }}\r\n        onClick={(e) => props.handleClickOpen(e, props.question._id)}\r\n      >\r\n        Answer\r\n      </Button>\r\n    );\r\n  }\r\n  return (\r\n    <Box mb={3} sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <Typography variant=\"p\" sx={{ fontSize: \"1.07em\", marginBottom: 1 }}>\r\n        {\"Q: \" + props.question.ques}\r\n        {canAnswer}\r\n      </Typography>\r\n      <Typography variant=\"p\">\r\n        {props.question.ans ? `A: ${props.question.ans}` : null}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.user.id,\r\n    productOwner: state.product.product.owner._id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductQuestion);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Typography, TextField, Grid, Button } from \"@mui/material\";\r\n\r\nimport isEmpty from \"../../../utils/isEmpty\";\r\nimport { createNewQuestion } from \"../../../actions/productActions\";\r\nimport { clearErrors } from \"../../../actions/errorActions\";\r\n\r\nconst ProductDiscussionForm = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    question: \"\",\r\n  });\r\n\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  //Hook for getting error message\r\n  useEffect(() => {\r\n    setErrorMessages({});\r\n    if (!isEmpty(props.error)) {\r\n      setErrorMessages(props.error.data.errors);\r\n    }\r\n  }, [props.error]);\r\n\r\n  //Hook for removing errors when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearErrors();\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onFormDataChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.createNewQuestion(props.productId, formData, setFormData);\r\n    setFormData({ question: \"\" });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"p\">\r\n        Ask the questions related to the product here.\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={onFormSubmit}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        mt={2}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={10}>\r\n            <TextField\r\n              name=\"question\"\r\n              value={formData.question}\r\n              onChange={onFormDataChange}\r\n              fullWidth\r\n              label=\"Your Question\"\r\n              variant=\"standard\"\r\n              error={errorMessages.question ? true : false}\r\n              helperText={\r\n                errorMessages.question ? errorMessages.question : null\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} mt={2}>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n              Ask\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productId: state.product.product._id,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createNewQuestion, clearErrors })(\r\n  ProductDiscussionForm\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nimport isEmpty from \"../../../utils/isEmpty\";\r\nimport { createNewAnswer } from \"../../../actions/productActions\";\r\nimport { clearErrors } from \"../../../actions/errorActions\";\r\n\r\nconst ProductAnswerForm = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    answer: \"\",\r\n  });\r\n\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  //Hook for getting error message\r\n  useEffect(() => {\r\n    setErrorMessages({});\r\n    if (!isEmpty(props.error)) {\r\n      setErrorMessages(props.error.data.errors);\r\n    }\r\n  }, [props.error]);\r\n\r\n  //Hook for removing errors when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      props.clearErrors();\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onFormDataChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.createNewAnswer(\r\n      props.productId,\r\n      props.questionId,\r\n      formData,\r\n      props.handleClose\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Dialog\r\n        component=\"form\"\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        onSubmit={onFormSubmit}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <DialogTitle>Your Answer</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Answer\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            name=\"answer\"\r\n            sx={{\r\n              width: {\r\n                xs: 300,\r\n                sm: 500,\r\n              },\r\n            }}\r\n            value={formData.answer}\r\n            onChange={onFormDataChange}\r\n            error={errorMessages.answer ? true : false}\r\n            helperText={errorMessages.answer ? errorMessages.answer : null}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"submit\" sx={{ marginBottom: 1 }}>\r\n            Post Answer\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    productId: state.product.product._id,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createNewAnswer, clearErrors })(\r\n  ProductAnswerForm\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Box, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nimport ProductQuestion from \"./ProductQuestion\";\r\nimport ProductDiscussionForm from \"./ProductDiscussionForm\";\r\nimport ProductAnswerForm from \"./ProductAnswerForm\";\r\n\r\nconst ProductDiscussion = (props) => {\r\n  // For answer form dialog\r\n  const [open, setOpen] = useState(false);\r\n  const [questionId, setQuestionId] = useState(null);\r\n\r\n  const handleClickOpen = (e, id) => {\r\n    e.preventDefault();\r\n    setQuestionId(id);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  let renderQuestions;\r\n  if (props.questions.length === 0) {\r\n    renderQuestions = <h5>No questions to show</h5>;\r\n  } else {\r\n    renderQuestions = props.questions.map((question) => (\r\n      <ProductQuestion\r\n        key={question._id}\r\n        question={question}\r\n        handleClickOpen={handleClickOpen}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Box mt={4} mb={18} sx={{ borderRadius: \"8px\" }}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" sx={{ fontWeight: \"600\", marginBottom: 2 }}>\r\n            Product Discussion\r\n          </Typography>\r\n          <ProductDiscussionForm />\r\n\r\n          <Box mt={4}>\r\n            <Typography variant=\"h6\" sx={{ marginBottom: 2 }}>\r\n              Previously asked questions\r\n            </Typography>\r\n            {renderQuestions}\r\n          </Box>\r\n        </CardContent>\r\n        <ProductAnswerForm\r\n          open={open}\r\n          handleClose={handleClose}\r\n          questionId={questionId}\r\n        />\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductDiscussion;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Box } from \"@mui/material\";\r\n\r\nimport isEmpty from \"../../utils/isEmpty\";\r\nimport ProductImages from \"./productImages/ProductImages\";\r\nimport ProductContent from \"./productContent/ProductContent\";\r\nimport ProductDiscussion from \"./productDiscussion/ProductDiscussion\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { getProduct } from \"../../actions/productActions\";\r\nimport { getMyInitiates } from \"../../actions/exchangeActions\";\r\n\r\nconst Product = (props) => {\r\n  const { productId } = useParams();\r\n\r\n  useEffect(() => {\r\n    props.getMyInitiates();\r\n    props.getProduct(productId);\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let productContent;\r\n  if (isEmpty(props.product)) {\r\n    productContent = <Loading />;\r\n  } else {\r\n    productContent = (\r\n      <React.Fragment>\r\n        {/* Shows product images */}\r\n        <ProductImages images={props.product.images} />\r\n        {/* Shows product description and Info */}\r\n        <ProductContent\r\n          product={props.product}\r\n          currentUserInfo={props.currentUserInfo}\r\n        />\r\n        {/* Shows product questions and answers */}\r\n        <ProductDiscussion questions={props.product.questions} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">{productContent}</Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    product: state.product.product,\r\n    currentUserInfo: state.auth.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getProduct, getMyInitiates })(\r\n  Product\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Avatar, Typography, Grid, Button } from \"@mui/material\";\r\nimport { Email, Phone, LocationOn, BarChart } from \"@mui/icons-material\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  // Calculate reputation value and color\r\n  const calculateReputation = (rep) => {\r\n    if (rep >= 0 && rep <= 30) {\r\n      return <p style={{ color: \"#FF5F5F\" }}>{`Bad [${rep}]`}</p>;\r\n    } else if (rep >= 31 && rep <= 60) {\r\n      return <p style={{ color: \"#70beb4\" }}>{`Average [${rep}]`}</p>;\r\n    } else {\r\n      return <p style={{ color: \"#109382\" }}>{`Good [${rep}]`}</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container sx={{ display: \"flex\" }}>\r\n      <Grid item xs={12} sm={3} md={2} sx={{ marginRight: 3 }}>\r\n        <Avatar\r\n          variant=\"rounded\"\r\n          alt={props.userInfo.username}\r\n          src={\r\n            process.env.REACT_APP_BASE_IMAGE_URL + props.userInfo.profileImage\r\n          }\r\n          sx={{\r\n            width: {\r\n              xs: 140,\r\n              sm: 160,\r\n            },\r\n            height: {\r\n              xs: 140,\r\n              sm: 160,\r\n            },\r\n          }}\r\n        ></Avatar>\r\n      </Grid>\r\n      <Grid mt={2} xs={12} sm={8} item>\r\n        <Typography variant=\"h4\" sx={{ fontWeight: \"600\" }}>\r\n          {props.userInfo.username}\r\n        </Typography>\r\n        <Grid container sx={{ display: \"flex\", marginTop: 4 }}>\r\n          <Box\r\n            sx={{ display: \"flex\", flexDirection: \"column\", marginRight: 4 }}\r\n          >\r\n            <Typography\r\n              variant=\"p\"\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginBottom: 2,\r\n              }}\r\n            >\r\n              <Email sx={{ color: \"#6325A9\", marginRight: 1 }} />\r\n              <Typography variant=\"p\">\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"rgba(0, 0, 0, 0.87)\",\r\n                  }}\r\n                  to=\"#\"\r\n                  onClick={(e) => {\r\n                    window.location = `mailto:${props.userInfo.email}`;\r\n                    e.preventDefault();\r\n                  }}\r\n                >\r\n                  {props.userInfo.email}\r\n                </Link>\r\n              </Typography>\r\n            </Typography>\r\n            <Typography\r\n              variant=\"p\"\r\n              sx={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <Phone sx={{ color: \"#6325A9\", marginRight: 1 }} />\r\n              <Typography variant=\"p\">\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"rgba(0, 0, 0, 0.87)\",\r\n                  }}\r\n                  to=\"#\"\r\n                  onClick={(e) => {\r\n                    window.location = `tel:+977-${props.userInfo.phone}`;\r\n                    e.preventDefault();\r\n                  }}\r\n                >\r\n                  {props.userInfo.phone}\r\n                </Link>\r\n              </Typography>\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <Typography\r\n              variant=\"p\"\r\n              sx={{ display: \"flex\", alignItems: \"center\", marginBottom: 2 }}\r\n            >\r\n              <LocationOn sx={{ color: \"#6325A9\", marginRight: 1 }} />\r\n              <Typography variant=\"p\">{props.userInfo.location}</Typography>\r\n            </Typography>\r\n            <Typography\r\n              variant=\"p\"\r\n              sx={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <BarChart sx={{ color: \"#6325A9\", marginRight: 1 }} />\r\n              <Typography variant=\"p\">\r\n                {calculateReputation(props.userInfo.reputation)}\r\n              </Typography>\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item mt={2}>\r\n        <Button\r\n          component={Link}\r\n          to=\"/profile/edit\"\r\n          color=\"info\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: \"none\" }}\r\n        >\r\n          Edit Profile\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos } from \"@mui/icons-material\";\r\n\r\nconst MyProductItem = (props) => {\r\n  return (\r\n    <Box>\r\n      <Card>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"180\"\r\n          image={\r\n            process.env.REACT_APP_BASE_IMAGE_URL + props.product.images[0].url\r\n          }\r\n          alt={props.product.name}\r\n        />\r\n\r\n        <CardContent>\r\n          <Box>\r\n            <Typography variant=\"h6\">{props.product.name}</Typography>\r\n          </Box>\r\n          <Box mt={3} sx={{ minHeight: \"60px\" }}>\r\n            <Typography variant=\"p\" sx={{ fontSize: \"0.9em\" }}>\r\n              {props.product.description.length > 101\r\n                ? props.product.description.slice(0, 102) + \" ...\"\r\n                : props.product.description}\r\n            </Typography>\r\n          </Box>\r\n          <Box mt={3} sx={{ display: \"flex\", justifyContent: \"end\" }}>\r\n            <Button\r\n              component={Link}\r\n              to={`/products/${props.product._id}`}\r\n              variant=\"outlined\"\r\n              sx={{ textTransform: \"none\" }}\r\n            >\r\n              Details\r\n              <ArrowForwardIos sx={{ fontSize: \"1em\", marginLeft: 1 }} />\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyProductItem;\r\n","import React from \"react\";\r\nimport { Grid, Box, Typography } from \"@mui/material\";\r\n\r\nimport MyProductItem from \"./MyProductItem\";\r\n\r\nconst MyProducts = (props) => {\r\n  const renderProducts = props.myProducts.map((product) => {\r\n    return (\r\n      <Grid key={product._id} item xs={12} sm={6} md={4}>\r\n        <MyProductItem product={product} />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box mt={5}>\r\n      <Typography mt={3} mb={3} variant=\"h5\" sx={{ fontWeight: 500 }}>\r\n        My Products\r\n      </Typography>\r\n      <Grid container spacing={5} mb={6}>\r\n        {renderProducts}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyProducts;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { Box, Rating, Typography } from \"@mui/material\";\r\n\r\nconst ReceivedReviews = (props) => {\r\n  let renderReviews = props.reviews.map((review) => {\r\n    return (\r\n      <Box key={review._id} mt={2}>\r\n        <Box component=\"form\" noValidate autoComplete=\"off\">\r\n          <Box>\r\n            <Typography variant=\"h6\">\r\n              {review.reviewText ? review.reviewText : null}\r\n            </Typography>\r\n\r\n            <Rating\r\n              name=\"reviewNumber\"\r\n              value={Number(review.reviewNumber)}\r\n              max={10}\r\n            />\r\n            <Typography variant=\"p\" sx={{ display: \"block\", opacity: \"0.9\" }}>\r\n              {moment(review.reviewedAt).format(\"MMM Do YYYY, h:mm a\")}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box mt={1} mb={7}>\r\n      <Typography mt={2} mb={3} variant=\"h5\" sx={{ fontWeight: 500 }}>\r\n        Received Reviews\r\n      </Typography>\r\n      {renderReviews}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReceivedReviews;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Container } from \"@mui/material\";\r\n\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyProducts from \"./myProducts/MyProducts\";\r\nimport ReceivedReviews from \"./ReceivedReviews\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { getMyProducts } from \"../../actions/exchangeActions\";\r\n\r\nconst Profile = (props) => {\r\n  // Get users products on profile render\r\n  useEffect(() => {\r\n    props.getMyProducts();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let profileRender;\r\n\r\n  if (props.userLoading || props.userInfoLoading || props.myProductsLoading) {\r\n    profileRender = <Loading />;\r\n  } else {\r\n    profileRender = (\r\n      <React.Fragment>\r\n        <ProfileInfo userInfo={props.userInfo} />\r\n        <MyProducts myProducts={props.myProducts} />\r\n        <ReceivedReviews reviews={props.userInfo.reviews} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">{profileRender}</Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userLoading: state.auth.userLoading,\r\n    userInfo: state.auth.userInfo,\r\n    userInfoLoading: state.auth.userInfoLoading,\r\n    myProducts: Object.values(state.exchange.myProducts),\r\n    myProductsLoading: state.exchange.myProductsLoading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMyProducts })(Profile);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, TextField, Grid, Button, Avatar } from \"@mui/material\";\r\n\r\nimport isEmpty from \"../../../utils/isEmpty\";\r\n\r\nconst EditProfileForm = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    location: \"\",\r\n    phone: \"\",\r\n    profileImage: \"\",\r\n    userImage: [],\r\n  });\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  // Hook for getting error message\r\n  useEffect(() => {\r\n    setErrorMessages({});\r\n    if (!isEmpty(props.error)) {\r\n      setErrorMessages(props.error.data.errors);\r\n    }\r\n  }, [props.error]);\r\n\r\n  // Hook for removing errors when component unmounts\r\n  // also for loading initial form data\r\n  useEffect(() => {\r\n    const newFormData = {};\r\n    Object.keys(formData).forEach((el) => {\r\n      if (!isEmpty(props.userInfo[el])) {\r\n        newFormData[el] = props.userInfo[el];\r\n      }\r\n    });\r\n    setFormData({ ...formData, ...newFormData });\r\n\r\n    return () => {\r\n      props.clearErrors();\r\n    };\r\n  }, [props.userInfo]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onFormValueChange = (e) => {\r\n    if (e.target.name === \"userImage\") {\r\n      setFormData({ ...formData, [e.target.name]: e.target.files[0] });\r\n    } else {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    let newFormData = new FormData();\r\n    Object.keys(formData).forEach((value) => {\r\n      if (value === \"userImage\") {\r\n        newFormData.append(\"userImage\", formData.userImage);\r\n      } else {\r\n        newFormData.append([value], formData[value]);\r\n      }\r\n    });\r\n    props.updateUserProfile(newFormData, navigate);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      mt={2}\r\n      onSubmit={onFormSubmit}\r\n      encType=\"multipart/form-data\"\r\n    >\r\n      <Avatar\r\n        alt={props.userInfo.username}\r\n        src={process.env.REACT_APP_BASE_IMAGE_URL + formData.profileImage}\r\n        sx={{\r\n          width: 140,\r\n          height: 140,\r\n          marginBottom: 1,\r\n          marginRight: \"auto\",\r\n          marginLeft: \"auto\",\r\n        }}\r\n      ></Avatar>\r\n      <Box textAlign=\"center\">\r\n        <input\r\n          accept=\"image/*\"\r\n          style={{ display: \"none\" }}\r\n          id=\"profile-upload-button\"\r\n          type=\"file\"\r\n          name=\"userImage\"\r\n          onChange={onFormValueChange}\r\n        />\r\n        <label htmlFor=\"profile-upload-button\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"span\"\r\n            color=\"info\"\r\n            size=\"small\"\r\n            sx={{ textTransform: \"none\" }}\r\n          >\r\n            Upload New Avatar\r\n          </Button>\r\n        </label>\r\n      </Box>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginTop: 2,\r\n        }}\r\n      >\r\n        <Grid item xs={5}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                name=\"username\"\r\n                label=\"New Username\"\r\n                value={formData.username}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.username ? true : false}\r\n                helperText={\r\n                  errorMessages.username ? errorMessages.username : null\r\n                }\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"password\"\r\n                name=\"password\"\r\n                label=\"New Password\"\r\n                value={formData.password}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.password ? true : false}\r\n                helperText={\r\n                  errorMessages.password ? errorMessages.password : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                label=\"New Confirm Password\"\r\n                value={formData.passwordConfirm}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.passwordConfirm ? true : false}\r\n                helperText={\r\n                  errorMessages.passwordConfirm\r\n                    ? errorMessages.passwordConfirm\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                name=\"email\"\r\n                label=\"New Email\"\r\n                value={formData.email}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.email ? true : false}\r\n                helperText={errorMessages.email ? errorMessages.email : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"text\"\r\n                name=\"location\"\r\n                label=\"New Location\"\r\n                value={formData.location}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.location ? true : false}\r\n                helperText={\r\n                  errorMessages.location ? errorMessages.location : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                label=\"New Phone\"\r\n                value={formData.phone}\r\n                onChange={onFormValueChange}\r\n                error={errorMessages.phone ? true : false}\r\n                helperText={errorMessages.phone ? errorMessages.phone : null}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ mt: 4 }}\r\n      >\r\n        Edit\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditProfileForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Container, Typography } from \"@mui/material\";\r\n\r\nimport EditProfileForm from \"./EditProfileForm\";\r\nimport Loading from \"../../loading/Loading\";\r\nimport { clearErrors } from \"../../../actions/errorActions\";\r\nimport { updateUserProfile } from \"../../../actions/authActions\";\r\n\r\nconst EditProfile = (props) => {\r\n  let editProfileRender;\r\n  if (props.userLoading || props.userInfoLoading) {\r\n    editProfileRender = <Loading />;\r\n  } else {\r\n    editProfileRender = (\r\n      <EditProfileForm\r\n        error={props.error}\r\n        clearErrors={props.clearErrors}\r\n        userInfo={props.userInfo}\r\n        updateUserProfile={props.updateUserProfile}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography mt={3} mb={1} variant=\"h5\" sx={{ fontWeight: 500 }}>\r\n          Edit Your Profile\r\n        </Typography>\r\n        {editProfileRender}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: state.auth.userInfo,\r\n    userInfoLoading: state.auth.userInfoLoading,\r\n    userLoading: state.auth.userLoading,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { clearErrors, updateUserProfile })(\r\n  EditProfile\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  Button,\r\n  CardMedia,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos } from \"@mui/icons-material\";\r\n\r\nconst FavoriteItem = (props) => {\r\n  return (\r\n    <Box>\r\n      <Card>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"170\"\r\n          image={\r\n            process.env.REACT_APP_BASE_IMAGE_URL + props.product.images[0].url\r\n          }\r\n          alt={props.product.name}\r\n        />\r\n\r\n        <CardContent>\r\n          <Box>\r\n            <Typography variant=\"h6\">{props.product.name}</Typography>\r\n          </Box>\r\n          <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Avatar\r\n              alt={props.product.name}\r\n              src={\r\n                process.env.REACT_APP_BASE_IMAGE_URL + props.owner.profileImage\r\n              }\r\n              sx={{ bgcolor: \"#2196f3\" }}\r\n            />\r\n            <Box ml={2} sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <Typography variant=\"p\">{props.owner.username}</Typography>\r\n              <Typography\r\n                variant=\"p\"\r\n                sx={{ opacity: \"90%\", fontSize: \"0.81em\" }}\r\n              >\r\n                {moment(props.product.postedAt).format(\"MMM Do YYYY, h:mm a\")}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box mt={3} sx={{ minHeight: \"60px\" }}>\r\n            <Typography variant=\"p\" sx={{ fontSize: \"0.9em\" }}>\r\n              {props.product.description.length > 101\r\n                ? props.product.description.slice(0, 102) + \" ...\"\r\n                : props.product.description}\r\n            </Typography>\r\n          </Box>\r\n          <Box mt={3} sx={{ display: \"flex\", justifyContent: \"end\" }}>\r\n            <Button\r\n              component={Link}\r\n              to={`/products/${props.product._id}`}\r\n              variant=\"outlined\"\r\n              sx={{ textTransform: \"none\" }}\r\n            >\r\n              Details\r\n              <ArrowForwardIos sx={{ fontSize: \"1em\", marginLeft: 1 }} />\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FavoriteItem;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Box, Typography, Container } from \"@mui/material\";\r\n\r\nimport FavoriteItem from \"./FavoriteItem\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { getMyFavorites } from \"../../actions/exchangeActions\";\r\n\r\nconst Favorites = (props) => {\r\n  useEffect(() => {\r\n    props.getMyFavorites();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let renderFavorites;\r\n\r\n  if (props.myFavoritesLoading) {\r\n    renderFavorites = <Loading />;\r\n  } else if (props.myFavorites.length === 0) {\r\n    renderFavorites = (\r\n      <Grid item xs={4}>\r\n        <Typography mt={4} mb={3} variant=\"p\" sx={{ fontWeight: 400 }}>\r\n          Your favorites are empty\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  } else {\r\n    renderFavorites = props.myFavorites.map((favorite) => {\r\n      return (\r\n        <Grid key={favorite._id} item xs={12} sm={6} md={4}>\r\n          <FavoriteItem product={favorite.product} owner={favorite.owner} />\r\n        </Grid>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography mt={3} mb={3} variant=\"h5\" sx={{ fontWeight: 500 }}>\r\n          My Favorites\r\n        </Typography>\r\n        <Grid container spacing={5} mb={6}>\r\n          {renderFavorites}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myFavoritesLoading: state.exchange.myFavoritesLoading,\r\n    myFavorites: state.exchange.myFavorites,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMyFavorites })(Favorites);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  TextField,\r\n  Rating,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport { createAReview } from \"../../actions/exchangeActions\";\r\n\r\nconst WriteReview = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    reviewText: \"\",\r\n    reviewNumber: 4,\r\n  });\r\n\r\n  const onFormDataChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const reviewData = {\r\n      exchangeId: props.exchangeId,\r\n      reviewNumber: formData.reviewNumber,\r\n      reviewText: formData.reviewText,\r\n      reviewedFor: props.initiatorId ? props.initiatorId : props.ownerId,\r\n    };\r\n    props.createAReview(reviewData);\r\n    setFormData({ ...formData, reviewText: \"\", reviewNumber: 4 });\r\n    props.handleClose();\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Dialog\r\n        component=\"form\"\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        onSubmit={onFormSubmit}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <DialogTitle>Write a review</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Review text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            name=\"reviewText\"\r\n            sx={{ width: 500 }}\r\n            value={formData.reviewText}\r\n            onChange={onFormDataChange}\r\n            // error={errorMessages.answer ? true : false}\r\n            // helperText={errorMessages.answer ? errorMessages.answer : null}\r\n          />\r\n          <Typography variant=\"p\" sx={{ display: \"block\", marginTop: 4 }}>\r\n            Select a review number\r\n          </Typography>\r\n          <Rating\r\n            name=\"reviewNumber\"\r\n            defaultValue={4}\r\n            max={10}\r\n            value={Number(formData.reviewNumber)}\r\n            onChange={onFormDataChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"submit\" sx={{ marginBottom: 1 }}>\r\n            Post Review\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createAReview })(WriteReview);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos, CompareArrowsOutlined } from \"@mui/icons-material\";\r\n\r\nimport WriteReview from \"../writeReview/WriteReview\";\r\nimport { createNewExchange } from \"../../actions/exchangeActions\";\r\n\r\nconst InitiateItem = (props) => {\r\n  // For review Dialog\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = (e, id) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Extract initiator data from all initiators\r\n  const initiatorData = props.product.initiator.filter(\r\n    (el) => el.initiatorId === props.loggedInUserId\r\n  )[0];\r\n\r\n  // When user cancels exchange on their initiates page\r\n  const onExchangeCancel = () => {\r\n    const exchangeData = {\r\n      productWanted: props.product.productWanted._id,\r\n    };\r\n    props.createNewExchange(exchangeData);\r\n  };\r\n\r\n  // Check offer status as pending, accepted or rejected\r\n  const checkOfferStatus = () => {\r\n    if (initiatorData.offerStatus === \"pending\") {\r\n      return (\r\n        <React.Fragment>\r\n          <CompareArrowsOutlined color=\"info\" sx={{ fontSize: \"40px\" }} />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"info\"\r\n            sx={{ width: 150, height: 50, fontSize: \"1.05em\", marginTop: 2 }}\r\n          >\r\n            Pending\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else if (initiatorData.offerStatus === \"rejected\") {\r\n      return (\r\n        <React.Fragment>\r\n          <CompareArrowsOutlined color=\"secondary\" sx={{ fontSize: \"40px\" }} />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            sx={{ width: 150, height: 50, fontSize: \"1.05em\", marginTop: 2 }}\r\n          >\r\n            Rejected\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <CompareArrowsOutlined color=\"primary\" sx={{ fontSize: \"40px\" }} />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ width: 150, height: 50, fontSize: \"1.05em\", marginTop: 2 }}\r\n          >\r\n            Accepted\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (initiatorData) {\r\n    return (\r\n      <Paper sx={{ marginBottom: 5 }} variant=\"outlined\">\r\n        <Box mt={2} ml={2} mb={2} mr={2}>\r\n          <Grid\r\n            container\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              flexDirection: {\r\n                sm: \"column\",\r\n                md: \"row\",\r\n              },\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={4}\r\n              sx={{\r\n                width: {\r\n                  sm: \"400px\",\r\n                  md: \"auto\",\r\n                },\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ fontSize: \"1.12em\", textAlign: \"center\" }}\r\n              >\r\n                Given\r\n              </Typography>\r\n              <Card>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height={150}\r\n                  image={\r\n                    process.env.REACT_APP_BASE_IMAGE_URL +\r\n                    initiatorData.initiatorProduct.images[0].url\r\n                  }\r\n                  alt={initiatorData.initiatorProduct.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  <Box>\r\n                    <Typography variant=\"h6\" sx={{ fontSize: \"1.12em\" }}>\r\n                      {initiatorData.initiatorProduct.name}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <Avatar\r\n                      alt={props.loggedInUserData.username}\r\n                      src={\r\n                        process.env.REACT_APP_BASE_IMAGE_URL +\r\n                        props.loggedInUserData.profileImage\r\n                      }\r\n                      sx={{ bgcolor: \"#2196f3\" }}\r\n                    />\r\n                    <Box\r\n                      ml={2}\r\n                      sx={{ display: \"flex\", flexDirection: \"column\" }}\r\n                    >\r\n                      <Typography variant=\"p\" sx={{ fontSize: \"0.95em\" }}>\r\n                        {props.loggedInUserData.username}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"p\"\r\n                        sx={{ opacity: \"90%\", fontSize: \"0.81em\" }}\r\n                      >\r\n                        {moment(initiatorData.initiatorProduct.postedAt).format(\r\n                          \"MMM Do YYYY, h:mm a\"\r\n                        )}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  <Box mt={3} sx={{ minHeight: \"40px\" }}>\r\n                    <Typography variant=\"p\" sx={{ fontSize: \"0.9em\" }}>\r\n                      {initiatorData.initiatorProduct.description.length > 55\r\n                        ? initiatorData.initiatorProduct.description.slice(\r\n                            0,\r\n                            56\r\n                          ) + \" ...\"\r\n                        : initiatorData.initiatorProduct.description}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mt={3} sx={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                    <Button\r\n                      component={Link}\r\n                      to={`/products/${initiatorData.initiatorProduct._id}`}\r\n                      variant=\"outlined\"\r\n                      sx={{ textTransform: \"none\" }}\r\n                    >\r\n                      Details\r\n                      <ArrowForwardIos\r\n                        sx={{ fontSize: \"1em\", marginLeft: 1 }}\r\n                      />\r\n                    </Button>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={4}\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"default\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                sx={{\r\n                  marginTop: 2,\r\n                  textTransform: \"none\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginBottom: 0,\r\n                }}\r\n              >\r\n                <Typography variant=\"p\" sx={{ opacity: \"94%\" }}>\r\n                  Initiated At:\r\n                </Typography>\r\n                <Typography variant=\"p\">\r\n                  {moment(initiatorData.initiatedAt).format(\r\n                    \"MMM Do YYYY, h:mm a\"\r\n                  )}\r\n                </Typography>\r\n              </Button>\r\n              {initiatorData.acceptedAt ? (\r\n                <Button\r\n                  variant=\"default\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  sx={{\r\n                    marginTop: 2,\r\n                    textTransform: \"none\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    marginBottom: 4,\r\n                  }}\r\n                >\r\n                  <Typography variant=\"p\" sx={{ opacity: \"94%\" }}>\r\n                    Exchanged At:\r\n                  </Typography>\r\n                  <Typography variant=\"p\">\r\n                    {moment(initiatorData.acceptedAt).format(\r\n                      \"MMM Do YYYY, h:mm a\"\r\n                    )}\r\n                  </Typography>\r\n                </Button>\r\n              ) : null}\r\n              {checkOfferStatus()}\r\n              {/* Dont show cancel button after an initiate is accepted */}\r\n              {!initiatorData.acceptedAt ? (\r\n                <Button\r\n                  onClick={onExchangeCancel}\r\n                  variant=\"default\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  sx={{\r\n                    marginTop: 3,\r\n                    textTransform: \"none\",\r\n                    color: \"#6325A9\",\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              ) : null}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={4}\r\n              sx={{\r\n                width: {\r\n                  sm: \"400px\",\r\n                  md: \"auto\",\r\n                },\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ fontSize: \"1.12em\", textAlign: \"center\" }}\r\n              >\r\n                Wanted\r\n              </Typography>\r\n              <Card>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height={150}\r\n                  image={\r\n                    process.env.REACT_APP_BASE_IMAGE_URL +\r\n                    props.product.productWanted.images[0].url\r\n                  }\r\n                  alt={props.product.productWanted.name}\r\n                />\r\n\r\n                <CardContent>\r\n                  <Box>\r\n                    <Typography variant=\"h6\" sx={{ fontSize: \"1.12em\" }}>\r\n                      {props.product.productWanted.name}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <Avatar\r\n                      alt={props.product.owner.username}\r\n                      src={\r\n                        process.env.REACT_APP_BASE_IMAGE_URL +\r\n                        props.product.owner.profileImage\r\n                      }\r\n                      sx={{ bgcolor: \"#2196f3\" }}\r\n                    />\r\n                    <Box\r\n                      ml={2}\r\n                      sx={{ display: \"flex\", flexDirection: \"column\" }}\r\n                    >\r\n                      <Typography variant=\"p\" sx={{ fontSize: \"0.95em\" }}>\r\n                        {props.product.owner.username}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"p\"\r\n                        sx={{ opacity: \"90%\", fontSize: \"0.81em\" }}\r\n                      >\r\n                        {moment(props.product.productWanted.postedAt).format(\r\n                          \"MMM Do YYYY, h:mm a\"\r\n                        )}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  <Box mt={3} sx={{ minHeight: \"40px\" }}>\r\n                    <Typography variant=\"p\" sx={{ fontSize: \"0.9em\" }}>\r\n                      {props.product.productWanted.description.length > 55\r\n                        ? props.product.productWanted.description.slice(0, 56) +\r\n                          \" ...\"\r\n                        : props.product.productWanted.description}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mt={3} sx={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                    <Button\r\n                      component={Link}\r\n                      to={`/products/${props.product.productWanted._id}`}\r\n                      variant=\"outlined\"\r\n                      sx={{ textTransform: \"none\" }}\r\n                    >\r\n                      Details\r\n                      <ArrowForwardIos\r\n                        sx={{ fontSize: \"1em\", marginLeft: 1 }}\r\n                      />\r\n                    </Button>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Only show review button after an initiate is accepted */}\r\n          {initiatorData.acceptedAt ? (\r\n            <React.Fragment>\r\n              <Button\r\n                onClick={handleClickOpen}\r\n                variant=\"contained\"\r\n                color=\"info\"\r\n                sx={{ marginTop: 2, textTransform: \"none\" }}\r\n              >\r\n                Review\r\n              </Button>\r\n              <WriteReview\r\n                open={open}\r\n                handleClose={handleClose}\r\n                ownerId={props.product.owner._id}\r\n                exchangeId={props.initiateId}\r\n              />\r\n            </React.Fragment>\r\n          ) : null}\r\n        </Box>\r\n      </Paper>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default connect(null, { createNewExchange })(InitiateItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Typography, Container } from \"@mui/material\";\r\n\r\nimport InitiateItem from \"./InitiateItem\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { getMyInitiates } from \"../../actions/exchangeActions\";\r\n\r\nconst Initiates = (props) => {\r\n  useEffect(() => {\r\n    props.getMyInitiates();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let renderInitiates;\r\n\r\n  if (props.myInitiatesLoading) {\r\n    renderInitiates = <Loading />;\r\n  } else if (props.myInitiates.length === 0) {\r\n    renderInitiates = (\r\n      <Typography mt={4} mb={3} variant=\"p\" sx={{ fontWeight: 400 }}>\r\n        Your have not initiated any exchanges\r\n      </Typography>\r\n    );\r\n  } else {\r\n    renderInitiates = props.myInitiates.map((initiate) => {\r\n      return (\r\n        <InitiateItem\r\n          key={initiate._id}\r\n          product={initiate}\r\n          loggedInUserId={props.loggedInUserId}\r\n          loggedInUserData={props.loggedInUserData}\r\n          initiateId={initiate._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography mt={3} mb={3} variant=\"h5\" sx={{ fontWeight: 500 }}>\r\n          My Initiates\r\n        </Typography>\r\n        {renderInitiates}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myInitiates: state.exchange.myInitiates,\r\n    myInitiatesLoading: state.exchange.myInitiatesLoading,\r\n    loggedInUserId: state.auth.user.id,\r\n    loggedInUserData: state.auth.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMyInitiates })(Initiates);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { ArrowForwardIos, CompareArrowsOutlined } from \"@mui/icons-material\";\r\n\r\nimport WriteReview from \"../writeReview/WriteReview\";\r\nimport {\r\n  createNewExchange,\r\n  rejectOffer,\r\n  acceptOffer,\r\n} from \"../../actions/exchangeActions\";\r\n\r\nconst OfferItem = (props) => {\r\n  // For review Dialog\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = (e, id) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // For component\r\n  // When users clicks accept for an offer\r\n  const onOfferAccept = () => {\r\n    const exchangeData = {\r\n      exchangeId: props.exchangeId,\r\n      initiatorItemId: props.initiatorData._id,\r\n    };\r\n    props.acceptOffer(exchangeData);\r\n  };\r\n\r\n  // When user clicks reject for an offer\r\n  const onOfferReject = () => {\r\n    const exchangeData = {\r\n      exchangeId: props.exchangeId,\r\n      initiatorItemId: props.initiatorData._id,\r\n    };\r\n    props.rejectOffer(exchangeData);\r\n  };\r\n\r\n  // Check if offer is accepted, rejected or pending\r\n  const checkOfferStatus = () => {\r\n    if (props.initiatorData.offerStatus === \"accepted\") {\r\n      return (\r\n        <React.Fragment>\r\n          <CompareArrowsOutlined color=\"primary\" sx={{ fontSize: \"40px\" }} />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ width: 150, height: 50, fontSize: \"1.05em\", marginTop: 2 }}\r\n          >\r\n            Accepted\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <CompareArrowsOutlined color=\"primary\" sx={{ fontSize: \"40px\" }} />\r\n          <Button\r\n            onClick={onOfferAccept}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ width: 150, height: 50, fontSize: \"1.05em\", marginTop: 2 }}\r\n          >\r\n            Accept\r\n          </Button>\r\n          <Button\r\n            onClick={onOfferReject}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            sx={{ width: 150, height: 50, fontSize: \"1.05em\", marginTop: 2 }}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ marginBottom: 5 }} variant=\"outlined\">\r\n      <Box mt={2} ml={2} mb={2} mr={2}>\r\n        <Grid\r\n          container\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            flexDirection: {\r\n              sm: \"column\",\r\n              md: \"row\",\r\n            },\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            sx={{\r\n              width: {\r\n                sm: \"400px\",\r\n                md: \"auto\",\r\n              },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{ fontSize: \"1.12em\", textAlign: \"center\" }}\r\n            >\r\n              Given\r\n            </Typography>\r\n            <Card>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height={150}\r\n                image={\r\n                  process.env.REACT_APP_BASE_IMAGE_URL +\r\n                  props.givenProduct.images[0].url\r\n                }\r\n                alt={props.givenProduct.name}\r\n              />\r\n\r\n              <CardContent>\r\n                <Box>\r\n                  <Typography variant=\"h6\" sx={{ fontSize: \"1.12em\" }}>\r\n                    {props.givenProduct.name}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Avatar\r\n                    alt={props.initiatorData.initiatorId.username}\r\n                    src={\r\n                      process.env.REACT_APP_BASE_IMAGE_URL +\r\n                      props.initiatorData.initiatorId.profileImage\r\n                    }\r\n                    sx={{ bgcolor: \"#2196f3\" }}\r\n                  />\r\n                  <Box ml={2} sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <Typography variant=\"p\" sx={{ fontSize: \"0.95em\" }}>\r\n                      {props.initiatorData.initiatorId.username}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"p\"\r\n                      sx={{ opacity: \"90%\", fontSize: \"0.81em\" }}\r\n                    >\r\n                      {moment(props.givenProduct.postedAt).format(\r\n                        \"MMM Do YYYY, h:mm a\"\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Box mt={3} sx={{ minHeight: \"40px\" }}>\r\n                  <Typography variant=\"p\" sx={{ fontSize: \"0.9em\" }}>\r\n                    {props.givenProduct.description.length > 55\r\n                      ? props.givenProduct.description.slice(0, 56) + \" ...\"\r\n                      : props.givenProduct.description}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mt={3} sx={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                  <Button\r\n                    component={Link}\r\n                    to={`/products/${props.givenProduct._id}`}\r\n                    variant=\"outlined\"\r\n                    sx={{ textTransform: \"none\" }}\r\n                  >\r\n                    Details\r\n                    <ArrowForwardIos sx={{ fontSize: \"1em\", marginLeft: 1 }} />\r\n                  </Button>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"default\"\r\n              color=\"secondary\"\r\n              sx={{\r\n                marginTop: 2,\r\n                textTransform: \"none\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                marginBottom: 0,\r\n              }}\r\n            >\r\n              <Typography variant=\"p\" sx={{ opacity: \"94%\" }}>\r\n                Initiated At:\r\n              </Typography>\r\n              <Typography variant=\"p\">\r\n                {moment(props.initiatorData.initiatedAt).format(\r\n                  \"MMM Do YYYY, h:mm a\"\r\n                )}\r\n              </Typography>\r\n            </Button>\r\n\r\n            {/* If offer is accepted, show exchanged at date */}\r\n            {props.initiatorData.acceptedAt ? (\r\n              <Button\r\n                variant=\"default\"\r\n                color=\"secondary\"\r\n                sx={{\r\n                  marginTop: 2,\r\n                  textTransform: \"none\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginBottom: 6,\r\n                }}\r\n              >\r\n                <Typography variant=\"p\" sx={{ opacity: \"94%\" }}>\r\n                  Exchanged At:\r\n                </Typography>\r\n                <Typography variant=\"p\">\r\n                  {moment(props.initiatorData.acceptedAt).format(\r\n                    \"MMM Do YYYY, h:mm a\"\r\n                  )}\r\n                </Typography>\r\n              </Button>\r\n            ) : null}\r\n            {checkOfferStatus()}\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            sx={{\r\n              width: {\r\n                sm: \"400px\",\r\n                md: \"auto\",\r\n              },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              sx={{ fontSize: \"1.12em\", textAlign: \"center\" }}\r\n            >\r\n              Wanted\r\n            </Typography>\r\n            <Card>\r\n              <CardMedia\r\n                component=\"img\"\r\n                height={150}\r\n                image={\r\n                  process.env.REACT_APP_BASE_IMAGE_URL +\r\n                  props.wantedProduct.images[0].url\r\n                }\r\n                alt={props.wantedProduct.name}\r\n              />\r\n\r\n              <CardContent>\r\n                <Box>\r\n                  <Typography variant=\"h6\" sx={{ fontSize: \"1.12em\" }}>\r\n                    {props.wantedProduct.name}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mt={1} sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <Avatar\r\n                    alt={props.ownerData.username}\r\n                    src={\r\n                      process.env.REACT_APP_BASE_IMAGE_URL +\r\n                      props.ownerData.profileImage\r\n                    }\r\n                    sx={{ bgcolor: \"#2196f3\" }}\r\n                  />\r\n                  <Box ml={2} sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <Typography variant=\"p\" sx={{ fontSize: \"0.95em\" }}>\r\n                      {props.ownerData.username}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"p\"\r\n                      sx={{ opacity: \"90%\", fontSize: \"0.81em\" }}\r\n                    >\r\n                      {moment(props.wantedProduct.postedAt).format(\r\n                        \"MMM Do YYYY, h:mm a\"\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n                <Box mt={3} sx={{ minHeight: \"40px\" }}>\r\n                  <Typography variant=\"p\" sx={{ fontSize: \"0.9em\" }}>\r\n                    {props.wantedProduct.description.length > 55\r\n                      ? props.wantedProduct.description.slice(0, 56) + \" ...\"\r\n                      : props.wantedProduct.description}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mt={3} sx={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                  <Button\r\n                    component={Link}\r\n                    to={`/products/${props.wantedProduct._id}`}\r\n                    variant=\"outlined\"\r\n                    sx={{ textTransform: \"none\" }}\r\n                  >\r\n                    Details\r\n                    <ArrowForwardIos sx={{ fontSize: \"1em\", marginLeft: 1 }} />\r\n                  </Button>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        {/* If offer is accepted, show review button */}\r\n        {props.initiatorData.acceptedAt ? (\r\n          <React.Fragment>\r\n            <Button\r\n              onClick={handleClickOpen}\r\n              variant=\"contained\"\r\n              color=\"info\"\r\n              sx={{ marginTop: 2, textTransform: \"none\" }}\r\n            >\r\n              Review\r\n            </Button>\r\n            <WriteReview\r\n              open={open}\r\n              handleClose={handleClose}\r\n              initiatorId={props.initiatorData.initiatorId._id}\r\n              exchangeId={props.exchangeId}\r\n            />\r\n          </React.Fragment>\r\n        ) : null}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default connect(null, { createNewExchange, rejectOffer, acceptOffer })(\r\n  OfferItem\r\n);\r\n","import React from \"react\";\r\n\r\nimport OfferItem from \"./OfferItem\";\r\n\r\nconst OfferList = (props) => {\r\n  const renderOffers = props.myOffers.map((offer) => {\r\n    return offer.initiator.map((initiatorData) => {\r\n      // Dont render rejected offers\r\n      if (initiatorData.offerStatus === \"rejected\") {\r\n        return null;\r\n      }\r\n      return (\r\n        <OfferItem\r\n          exchangeId={offer._id}\r\n          key={initiatorData._id}\r\n          initiatorData={initiatorData}\r\n          ownerData={props.ownerInfo}\r\n          wantedProduct={offer.productWanted}\r\n          givenProduct={initiatorData.initiatorProduct}\r\n          initiateInitiatedAt={initiatorData.initiatedAt}\r\n        />\r\n      );\r\n    });\r\n  });\r\n\r\n  return renderOffers;\r\n};\r\n\r\nexport default OfferList;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Typography, Container } from \"@mui/material\";\r\n\r\nimport Loading from \"../loading/Loading\";\r\nimport OfferList from \"./OfferList\";\r\nimport { getMyOffers } from \"../../actions/exchangeActions\";\r\n\r\nconst Offers = (props) => {\r\n  useEffect(() => {\r\n    props.getMyOffers();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let renderOffers;\r\n\r\n  if (props.myOffersLoading) {\r\n    renderOffers = <Loading />;\r\n  } else if (props.myOffers.length === 0) {\r\n    renderOffers = (\r\n      <Typography mt={4} mb={3} variant=\"p\" sx={{ fontWeight: 400 }}>\r\n        Your do not have any offers\r\n      </Typography>\r\n    );\r\n  } else {\r\n    renderOffers = (\r\n      <OfferList ownerInfo={props.ownerInfo} myOffers={props.myOffers} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography mt={3} mb={3} variant=\"h5\" sx={{ fontWeight: 500 }}>\r\n          My Offers\r\n        </Typography>\r\n        {renderOffers}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    myOffers: state.exchange.myOffers,\r\n    myOffersLoading: state.exchange.myOffersLoading,\r\n    ownerInfo: state.auth.userInfo,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getMyOffers })(Offers);\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { DataGrid, GridActionsCellItem } from \"@mui/x-data-grid\";\r\nimport { Delete, ArrowUpward, ArrowDownward } from \"@mui/icons-material\";\r\n\r\nconst UserList = (props) => {\r\n  // Define the columns\r\n  const dataColumns = [\r\n    { field: \"id\", headerName: \"Id\", width: 120 },\r\n    { field: \"username\", headerName: \"Username\", width: 120 },\r\n    { field: \"email\", headerName: \"Email\", width: 180 },\r\n    { field: \"phone\", headerName: \"Phone\", width: 110 },\r\n    { field: \"admin\", headerName: \"Is Admin\", type: \"boolean\", width: 90 },\r\n    {\r\n      field: \"reputation\",\r\n      headerName: \"Reputation\",\r\n      width: 110,\r\n    },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      type: \"actions\",\r\n      width: 120,\r\n      getActions: (params) => [\r\n        <GridActionsCellItem\r\n          icon={<Delete color=\"secondary\" />}\r\n          label=\"Delete\"\r\n          onClick={() => props.adminDeleteUser(params.id)}\r\n        />,\r\n        <GridActionsCellItem\r\n          icon={\r\n            params.getValue(params.id, \"admin\") ? (\r\n              <ArrowDownward color=\"info\" />\r\n            ) : (\r\n              <ArrowUpward color=\"info\" />\r\n            )\r\n          }\r\n          onClick={\r\n            params.getValue(params.id, \"admin\")\r\n              ? () => props.adminDemoteUser(params.id)\r\n              : () => props.adminPromoteUser(params.id)\r\n          }\r\n          label=\"Update Role\"\r\n        />,\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Define the value for each rows\r\n  const dataRows = [];\r\n  props.adminUsers.forEach((user) => {\r\n    dataRows.push({\r\n      id: user._id,\r\n      username: user.username,\r\n      email: user.email,\r\n      phone: user.phone,\r\n      admin: user.role === \"admin\" ? true : false,\r\n      reputation: user.reputation,\r\n    });\r\n  });\r\n\r\n  // Render JSX\r\n  return (\r\n    <Box>\r\n      <DataGrid\r\n        rows={dataRows}\r\n        columns={dataColumns}\r\n        autoHeight={true}\r\n        density=\"comfortable\"\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Box } from \"@mui/material\";\r\nimport { DataGrid, GridActionsCellItem } from \"@mui/x-data-grid\";\r\nimport { Delete } from \"@mui/icons-material\";\r\n\r\nconst ProductList = (props) => {\r\n  // Define the columns\r\n  const dataColumns = [\r\n    { field: \"id\", headerName: \"Id\", width: 120 },\r\n    { field: \"product\", headerName: \"Product Name\", width: 200 },\r\n    { field: \"owner\", headerName: \"Owner\", width: 120 },\r\n    { field: \"postedAt\", headerName: \"Posted At\", type: \"date\", width: 120 },\r\n    { field: \"reportedCount\", headerName: \"Reported\", width: 120 },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Actions\",\r\n      type: \"actions\",\r\n      width: 120,\r\n      getActions: (params) => [\r\n        <GridActionsCellItem\r\n          icon={<Delete color=\"secondary\" />}\r\n          label=\"Delete\"\r\n          onClick={() => props.adminDeleteProduct(params.id)}\r\n        />,\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Define the value for each rows\r\n  const dataRows = [];\r\n  props.adminProducts.forEach((product) => {\r\n    dataRows.push({\r\n      id: product._id,\r\n      product: product.name,\r\n      owner: product.owner.username,\r\n      postedAt: moment(product.postedAt).format(\"MMM Do YYYY\"),\r\n      reportedCount: product.reportedCount,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Box>\r\n      <DataGrid\r\n        rows={dataRows}\r\n        columns={dataColumns}\r\n        autoHeight={true}\r\n        density=\"comfortable\"\r\n        pageSize={10}\r\n        rowsPerPageOptions={[10]}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\n\r\nimport { ManageAccounts, InboxSharp } from \"@mui/icons-material\";\r\n\r\nconst Sidebar = (props) => {\r\n  return (\r\n    <Box sx={{ width: \"100%\", maxWidth: 200, bgcolor: \"background.paper\" }}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        <ListItemButton\r\n          selected={props.selectedIndex === 0}\r\n          onClick={(e) => props.handleListItemClick(e, 0)}\r\n        >\r\n          <ListItemIcon>\r\n            <ManageAccounts />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Users\" />\r\n        </ListItemButton>\r\n        <ListItemButton\r\n          selected={props.selectedIndex === 1}\r\n          onClick={(e) => props.handleListItemClick(e, 1)}\r\n        >\r\n          <ListItemIcon>\r\n            <InboxSharp />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Products\" />\r\n        </ListItemButton>\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import axiosInstance from \"../utils/axios/axiosInstance\";\r\nimport createToast from \"../utils/toast/createToast\";\r\nimport { setErrors } from \"./errorActions\";\r\nimport {\r\n  ADMIN_GET_USERS,\r\n  ADMIN_GET_USERS_LOADING,\r\n  ADMIN_GET_PRODUCTS,\r\n  ADMIN_GET_PRODUCTS_LOADING,\r\n  ADMIN_DELETE_USER,\r\n  ADMIN_DELETE_PRODUCT,\r\n  ADMIN_PROMOTE_USER,\r\n  ADMIN_DEMOTE_USER,\r\n} from \"./types\";\r\n\r\n// Action for getting all users\r\nexport const adminGetAllUsers = () => async (dispatch) => {\r\n  dispatch(setAdminUsersLoading());\r\n  try {\r\n    const response = await axiosInstance.get(\"/api/admin/get-users\");\r\n    dispatch({\r\n      type: ADMIN_GET_USERS,\r\n      payload: response.data.data.users,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n  }\r\n};\r\n\r\nconst setAdminUsersLoading = () => {\r\n  return {\r\n    type: ADMIN_GET_USERS_LOADING,\r\n  };\r\n};\r\n\r\n// Action for deleting a user\r\nexport const adminDeleteUser = (userId) => async (dispatch) => {\r\n  try {\r\n    await axiosInstance.delete(`/api/admin/delete-user/${userId}`);\r\n    createToast(\"User deleted\", \"success\");\r\n    dispatch({\r\n      type: ADMIN_DELETE_USER,\r\n      payload: userId,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Action for promoting a user\r\nexport const adminPromoteUser = (userId) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.patch(`/api/admin/promote-user/`, {\r\n      userId,\r\n    });\r\n    createToast(\"User promoted\", \"success\");\r\n    dispatch({\r\n      type: ADMIN_PROMOTE_USER,\r\n      payload: response.data.data.promotedUser,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Action for demoting a user\r\nexport const adminDemoteUser = (userId) => async (dispatch) => {\r\n  try {\r\n    const response = await axiosInstance.patch(`/api/admin/demote-user/`, {\r\n      userId,\r\n    });\r\n\r\n    createToast(\"User demoted\", \"success\");\r\n    dispatch({\r\n      type: ADMIN_DEMOTE_USER,\r\n      payload: response.data.data.demotedUser,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n\r\n// Action for getting all products\r\nexport const adminGetAllProducts = () => async (dispatch) => {\r\n  dispatch(setAdminProductsLoading());\r\n  try {\r\n    const response = await axiosInstance.get(\"/api/admin/get-products\");\r\n    dispatch({\r\n      type: ADMIN_GET_PRODUCTS,\r\n      payload: response.data.data.products,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n  }\r\n};\r\n\r\nconst setAdminProductsLoading = () => {\r\n  return {\r\n    type: ADMIN_GET_PRODUCTS_LOADING,\r\n  };\r\n};\r\n\r\n// Action for deleting a product\r\nexport const adminDeleteProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    await axiosInstance.delete(`/api/admin/delete-product/${productId}`);\r\n    createToast(\"Product deleted\", \"success\");\r\n    dispatch({\r\n      type: ADMIN_DELETE_PRODUCT,\r\n      payload: productId,\r\n    });\r\n  } catch (err) {\r\n    dispatch(setErrors(err.response.data));\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Typography, Container, Grid } from \"@mui/material\";\r\n\r\nimport UserList from \"./UserList\";\r\nimport ProductList from \"./ProductList\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Loading from \"../loading/Loading\";\r\nimport {\r\n  adminGetAllUsers,\r\n  adminDeleteUser,\r\n  adminPromoteUser,\r\n  adminDemoteUser,\r\n  adminGetAllProducts,\r\n  adminDeleteProduct,\r\n} from \"../../actions/adminActions\";\r\n\r\nconst Admin = (props) => {\r\n  // For Sidebar\r\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n  // Change table to products or users\r\n  const handleListItemClick = (e, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.adminGetAllUsers();\r\n    props.adminGetAllProducts();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  let renderList;\r\n\r\n  if (props.adminUsersLoading || props.adminProductsLoading) {\r\n    renderList = <Loading />;\r\n  } else if (selectedIndex === 0) {\r\n    renderList = (\r\n      <UserList\r\n        adminUsers={props.adminUsers}\r\n        adminDeleteUser={props.adminDeleteUser}\r\n        adminPromoteUser={props.adminPromoteUser}\r\n        adminDemoteUser={props.adminDemoteUser}\r\n      />\r\n    );\r\n  } else if (selectedIndex === 1) {\r\n    renderList = (\r\n      <ProductList\r\n        adminProducts={props.adminProducts}\r\n        adminDeleteProduct={props.adminDeleteProduct}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box mt={11}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography mt={3} mb={3} variant=\"h5\" sx={{ fontWeight: 500 }}>\r\n          Admin Panel\r\n        </Typography>\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n            {/* Sidebar to select ether user or product list */}\r\n            <Sidebar\r\n              selectedIndex={selectedIndex}\r\n              handleListItemClick={handleListItemClick}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            {renderList}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    adminUsers: Object.values(state.admin.adminUsers),\r\n    adminProducts: Object.values(state.admin.adminProducts),\r\n    adminUsersLoading: state.admin.adminUsersLoading,\r\n    adminProductsLoading: state.admin.adminProductsLoading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  adminGetAllUsers,\r\n  adminDeleteUser,\r\n  adminPromoteUser,\r\n  adminDemoteUser,\r\n  adminGetAllProducts,\r\n  adminDeleteProduct,\r\n})(Admin);\r\n","import {\r\n  SET_CURRENT_USER,\r\n  SET_CURRENT_USER_INFO,\r\n  FAVORITE_PRODUCT,\r\n  SET_CURRENT_USER_LOADING,\r\n  SET_CURRENT_USER_INFO_LOADING,\r\n} from \"../actions/types\";\r\nimport isEmpty from \"../utils/isEmpty\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  userLoading: false,\r\n  userInfo: {},\r\n  userInfoLoading: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        user: isEmpty(action.payload) ? {} : action.payload,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        userLoading: false,\r\n      };\r\n    case SET_CURRENT_USER_INFO:\r\n      return {\r\n        ...state,\r\n        userInfo: action.payload,\r\n        userInfoLoading: false,\r\n      };\r\n    case FAVORITE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          favorites: action.payload,\r\n        },\r\n      };\r\n    case SET_CURRENT_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        userLoading: true,\r\n      };\r\n\r\n    case SET_CURRENT_USER_INFO_LOADING:\r\n      return {\r\n        ...state,\r\n        userInfoLoading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import _ from \"lodash\";\r\n\r\nimport {\r\n  CREATE_NEW_PRODUCT,\r\n  GET_PRODUCTS,\r\n  GET_PRODUCT,\r\n  CREATE_NEW_QUESTION,\r\n  CREATE_NEW_ANSWER,\r\n  SET_PRODUCTS_LOADING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  products: {},\r\n  product: {},\r\n  productsLoading: false,\r\n};\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_NEW_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: { [action.payload._id]: action.payload, ...state.products },\r\n      };\r\n    case GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: { ..._.mapKeys(action.payload, \"_id\") },\r\n        productsLoading: false,\r\n      };\r\n    case SET_PRODUCTS_LOADING: {\r\n      return {\r\n        ...state,\r\n        productsLoading: true,\r\n      };\r\n    }\r\n    case GET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: action.payload,\r\n      };\r\n    case CREATE_NEW_QUESTION:\r\n      return {\r\n        ...state,\r\n        product: { ...state.product, questions: action.payload },\r\n      };\r\n    case CREATE_NEW_ANSWER:\r\n      return {\r\n        ...state,\r\n        product: { ...state.product, questions: action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;\r\n","import { SET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return action.payload;\r\n        case CLEAR_ERRORS:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default errorReducer;\r\n","import _ from \"lodash\";\r\n\r\nimport {\r\n    GET_MY_PRODUCTS,\r\n    GET_MY_FAVORITES,\r\n    GET_MY_INITIATES,\r\n    GET_MY_OFFERS,\r\n    SET_MY_PRODUCTS_LOADING,\r\n    SET_MY_FAVORITES_LOADING,\r\n    SET_MY_INITIATES_LOADING,\r\n    SET_MY_OFFERS_LOADING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    myProducts: {},\r\n    myFavorites: [],\r\n    myInitiates: [],\r\n    myOffers: [],\r\n    myProductsLoading: false,\r\n    myFavoritesLoading: false,\r\n    myInitiatesLoading: false,\r\n    myOffersLoading: false,\r\n};\r\n\r\nconst exchangeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MY_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                myProducts: { ..._.mapKeys(action.payload, \"_id\") },\r\n                myProductsLoading: false,\r\n            };\r\n        case SET_MY_PRODUCTS_LOADING:\r\n            return {\r\n                ...state,\r\n                myProductsLoading: true,\r\n            };\r\n        case GET_MY_INITIATES:\r\n            return {\r\n                ...state,\r\n                myInitiates: action.payload,\r\n                myInitiatesLoading: false,\r\n            };\r\n        case SET_MY_INITIATES_LOADING:\r\n            return {\r\n                ...state,\r\n                myInitiatesLoading: true,\r\n            };\r\n        case GET_MY_FAVORITES:\r\n            return {\r\n                ...state,\r\n                myFavorites: action.payload,\r\n                myFavoritesLoading: false,\r\n            };\r\n\r\n        case SET_MY_FAVORITES_LOADING:\r\n            return {\r\n                ...state,\r\n                myFavoritesLoading: true,\r\n            };\r\n        case GET_MY_OFFERS:\r\n            return {\r\n                ...state,\r\n                myOffers: action.payload,\r\n                myOffersLoading: false,\r\n            };\r\n        case SET_MY_OFFERS_LOADING:\r\n            return {\r\n                ...state,\r\n                myOffersLoading: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default exchangeReducer;\r\n","import _ from \"lodash\";\r\n\r\nimport {\r\n  ADMIN_GET_USERS,\r\n  ADMIN_GET_USERS_LOADING,\r\n  ADMIN_GET_PRODUCTS,\r\n  ADMIN_GET_PRODUCTS_LOADING,\r\n  ADMIN_DELETE_USER,\r\n  ADMIN_DELETE_PRODUCT,\r\n  ADMIN_PROMOTE_USER,\r\n  ADMIN_DEMOTE_USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  adminUsers: {},\r\n  adminProducts: {},\r\n  adminUsersLoading: false,\r\n  adminProductsLoading: false,\r\n};\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADMIN_GET_USERS:\r\n      return {\r\n        ...state,\r\n        adminUsers: { ..._.mapKeys(action.payload, \"_id\") },\r\n        adminUsersLoading: false,\r\n      };\r\n    case ADMIN_GET_USERS_LOADING:\r\n      return {\r\n        ...state,\r\n        adminUsersLoading: true,\r\n      };\r\n    case ADMIN_GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        adminProducts: { ..._.mapKeys(action.payload, \"_id\") },\r\n        adminProductsLoading: false,\r\n      };\r\n    case ADMIN_GET_PRODUCTS_LOADING:\r\n      return {\r\n        ...state,\r\n        adminProductsLoading: true,\r\n      };\r\n    case ADMIN_DELETE_USER:\r\n      return {\r\n        ...state,\r\n        adminUsers: _.omit(state.adminUsers, action.payload),\r\n      };\r\n    case ADMIN_DELETE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        adminProducts: _.omit(state.adminProducts, action.payload),\r\n      };\r\n    case ADMIN_PROMOTE_USER:\r\n      return {\r\n        ...state,\r\n        adminUsers: {\r\n          ...state.adminUsers,\r\n          [action.payload._id]: action.payload,\r\n        },\r\n      };\r\n    case ADMIN_DEMOTE_USER:\r\n      return {\r\n        ...state,\r\n        adminUsers: {\r\n          ...state.adminUsers,\r\n          [action.payload._id]: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport productReducer from \"./productReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport exchangeReducer from \"./exchangeReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  error: errorReducer,\r\n  product: productReducer,\r\n  exchange: exchangeReducer,\r\n  admin: adminReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\n\r\nimport PrivateRoute from \"../auth/PrivateRoute\";\r\n// import AdminRoute from \"../auth/AdminRoute\";\r\n// import HomePage from \"../homepage/Home\";\r\nimport Register from \"../auth/Register\";\r\nimport Login from \"../auth/Login\";\r\nimport Navbar from \"../navigation/Navbar\";\r\nimport NewProduct from \"../newProduct/NewProduct\";\r\nimport Products from \"../products/Products\";\r\nimport Product from \"../product/Product\";\r\nimport Profile from \"../profile/Profile\";\r\nimport EditProfile from \"../profile/editProfile/EditProfile\";\r\nimport Favorites from \"../favorites/Favorites\";\r\nimport Initiates from \"../initiates/Initiates\";\r\nimport Offers from \"../offers/Offers\";\r\nimport Admin from \"../admin/Admin\";\r\nimport setAuthToken from \"../../utils/auth/setAuthToken\";\r\nimport { setCurrentUser, populateUserInfo } from \"../../actions/authActions\";\r\nimport store from \"../../store\";\r\n\r\n// Check login state of the user\r\nif (localStorage.jwt) {\r\n  const token = localStorage.jwt;\r\n  setAuthToken(token);\r\n  const decoded = jwt_decode(token);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  store.dispatch(populateUserInfo(decoded.id));\r\n}\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate to=\"/products\" />} />\r\n        <Route path=\"/auth/register\" element={<Register />} />\r\n        <Route path=\"/auth/login\" element={<Login />} />\r\n        <Route\r\n          path=\"/products/new\"\r\n          element={\r\n            <PrivateRoute>\r\n              <NewProduct />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route path=\"/products\" element={<Products />} />\r\n        <Route path=\"/products/:productId\" element={<Product />} />\r\n        <Route\r\n          path=\"/profile\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Profile />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/profile/edit\"\r\n          element={\r\n            <PrivateRoute>\r\n              <EditProfile />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/favorites\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Favorites />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/initiates\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Initiates />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/offers\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Offers />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            <PrivateRoute>\r\n              <Admin />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport theme from \"./utils/materialUI/theme\";\nimport Layout from \"./components/layout/Layout\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nconsole.log(process.env.NODE_ENV);\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <ToastContainer\n                    autoClose={2000}\n                    closeOnClick={true}\n                    limit={1}\n                    style={{ marginTop: 75 }}\n                    pauseOnFocusLoss={false}\n                />\n                <ThemeProvider theme={theme}>\n                    <Layout />\n                </ThemeProvider>\n            </BrowserRouter>\n        </Provider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","const isEmpty = (data) => {\r\n    return (\r\n        data === undefined ||\r\n        data === null ||\r\n        (typeof data === \"object\" && Object.keys(data).length === 0) ||\r\n        (typeof data === \"string\" && data.trim().length === 0)\r\n    );\r\n};\r\n\r\nmodule.exports = isEmpty;\r\n"],"sourceRoot":""}